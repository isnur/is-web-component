var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/Badge.html",[0,0.746,1,0.457]],["body/components/Badge.html",[0,0.902,1,0.821,2,1.381,3,1.296,4,0.795,5,0.795,6,1.523,7,1.523,8,1.708,9,2.145,10,2.81,11,2.145,12,1.735,13,0.64,14,0.902,15,2.146,16,2.842,17,2.842,18,1.829,19,1.708,20,2.696,21,2.146,22,1.995,23,0.98,24,0.083,25,0.829,26,0.9,27,2.484,28,3.029,29,1.995,30,1.381,31,2.145,32,2.145,33,2.145,34,2.145,35,2.145,36,2.145,37,2.145,38,2.145,39,2.145,40,1.381,41,0.98,42,1.523,43,1.381,44,1.995,45,2.145,46,1.995,47,1.381,48,1.523,49,1.523,50,1.523,51,1.523,52,1.523,53,1.523,54,1.523,55,1.995,56,2.146,57,1.523,58,0.829,59,2.145,60,0.393,61,1.523,62,1.523,63,0.036,64,0.051,65,0.036]],["title/interfaces/ILabelTo.html",[66,0.925,67,0.746]],["body/interfaces/ILabelTo.html",[3,1.203,4,1.203,5,1.203,13,0.969,14,1.185,24,0.081,25,0.94,26,1.118,58,0.769,63,0.055,64,0.067,65,0.055,66,1.471,67,1.185,68,1.835,69,1.835,70,2.041,71,1.655,72,0.969,73,1.835,74,1.483]],["title/interfaces/ISelectItem.html",[66,0.925,72,0.746]],["body/interfaces/ISelectItem.html",[3,1.203,4,1.203,5,1.203,13,0.969,14,1.185,24,0.081,25,0.94,26,1.086,58,1.058,63,0.055,64,0.067,65,0.055,66,1.471,67,0.969,68,1.835,69,1.835,70,1.483,71,1.203,72,1.185,73,2.525,74,1.959]],["title/components/Multiselect.html",[0,0.746,60,0.457]],["body/components/Multiselect.html",[0,0.38,1,0.133,2,0.582,3,0.27,4,0.27,5,0.27,7,0.517,8,0.72,9,0.904,11,0.904,12,1.255,13,0.217,14,0.38,15,0.96,18,0.582,19,0.72,20,1.448,21,2.266,23,1.165,24,0.085,25,0.879,26,0.755,27,2.718,28,2.754,30,1.165,40,1.165,41,1.595,42,2.479,43,1.255,47,0.932,48,0.517,49,0.517,50,0.517,51,0.517,52,0.517,53,0.517,54,2.069,56,1.152,57,0.517,58,0.604,59,0.904,60,0.502,61,0.517,62,0.517,63,0.012,64,0.022,65,0.012,67,0.38,70,1.165,71,1.08,72,1.172,74,0.776,75,0.517,76,1.184,77,1.58,78,1.184,79,1.206,80,1.58,81,2.588,82,1.58,83,1.206,84,1.206,85,1.95,86,1.645,87,1.206,88,1.206,89,2.874,90,1.206,91,1.58,92,1.58,93,1.896,94,1.448,95,1.184,96,1.184,97,1.184,98,0.677,99,1.896,100,1.58,101,0.677,102,0.904,103,1.184,104,1.58,105,1.184,106,1.184,107,1.184,108,0.677,109,1.206,110,1.152,111,0.677,112,1.184,113,2.711,114,1.184,115,0.677,116,2.155,117,1.184,118,1.184,119,0.677,120,0.677,121,0.904,122,0.904,123,3.07,124,0.677,125,0.677,126,0.904,127,0.677,128,0.904,129,0.677,130,1.95,131,0.904,132,1.448,133,0.677,134,0.72,135,0.677,136,0.904,137,0.904,138,0.904,139,1.152,140,0.677,141,0.904,142,0.904,143,0.904,144,0.904,145,0.904,146,1.58,147,0.677,148,0.904,149,0.904,150,0.904,151,0.677,152,0.677,153,0.677,154,0.904,155,0.904,156,2.371,157,0.677,158,2.155,159,0.677,160,0.677,161,0.677,162,1.206,163,0.517,164,0.677,165,1.58,166,2.554,167,2.965,168,1.184,169,1.184,170,1.58,171,1.184,172,0.677,173,0.677,174,2.846,175,0.677,176,0.677,177,0.677,178,0.677,179,0.677,180,0.677,181,2.554,182,0.677,183,0.677,184,0.904,185,0.677,186,0.677,187,1.184,188,2.711,189,0.677,190,0.677,191,0.677,192,0.677,193,1.81,194,1.58,195,1.58,196,1.184,197,0.677,198,1.896,199,0.677,200,1.184,201,1.184,202,0.677,203,0.677,204,0.677,205,0.677,206,0.677,207,0.904,208,1.184,209,0.677,210,0.677,211,1.184,212,0.677,213,0.677,214,0.677,215,1.184,216,0.677,217,0.411,218,0.677,219,0.677,220,0.677,221,0.677,222,0.677,223,0.677,224,0.677,225,0.677,226,0.677,227,0.677,228,0.677,229,0.677,230,0.677,231,0.677,232,0.677]],["title/coverage.html",[233,2.382]],["body/coverage.html",[0,1.185,1,0.594,5,1.203,6,2.305,24,0.08,25,0.769,60,0.594,63,0.055,64,0.067,65,0.055,66,1.471,67,0.969,69,2.244,72,0.969,75,2.305,139,1.835,193,3.045,233,2.305,234,1.835,235,3.02,236,3.02,237,3.02,238,3.02,239,3.692,240,3.02,241,3.02,242,2.305,243,2.305,244,3.02,245,2.305,246,3.02,247,2.305]],["title/miscellaneous/functions.html",[248,1.5,249,2.123]],["body/miscellaneous/functions.html",[13,1.046,15,1.98,23,1.601,24,0.077,26,0.83,58,0.83,63,0.059,64,0.07,65,0.059,109,2.488,242,2.488,243,2.951,248,2.488,249,2.488,250,3.259,251,3.259,252,3.866,253,3.866,254,3.259]],["title/index.html",[13,0.631,255,1.5,256,1.5]],["body/index.html",[0,1.001,1,0.614,2,1.532,4,0.924,8,1.895,24,0.079,56,1.895,58,0.897,60,0.614,63,0.042,64,0.057,65,0.042,71,0.924,73,2.14,134,1.895,184,2.381,207,1.772,234,1.41,245,2.381,247,1.772,257,4.133,258,2.321,259,2.321,260,2.321,261,2.321,262,1.772,263,1.41,264,2.321,265,3.118,266,2.321,267,2.321,268,2.321,269,3.118,270,3.118,271,3.118,272,2.321,273,2.321,274,2.321,275,2.321,276,2.321,277,3.118,278,2.321,279,2.321,280,2.321,281,2.321,282,1.772,283,2.321,284,2.321,285,2.321,286,2.321,287,2.321,288,2.321,289,3.928,290,2.381,291,2.321,292,2.321,293,2.321,294,2.321,295,3.765,296,3.118,297,3.522,298,2.321,299,2.321,300,3.118,301,2.321,302,2.321,303,3.118,304,2.321,305,2.321,306,2.321,307,2.321,308,2.321,309,2.321,310,2.321,311,2.321]],["title/license.html",[255,1.5,256,1.5,312,1.5]],["body/license.html",[24,0.06,63,0.046,64,0.06,65,0.046,110,1.528,234,1.528,282,2.511,312,1.92,313,2.515,314,3.665,315,2.515,316,2.515,317,3.289,318,2.515,319,2.515,320,2.515,321,2.515,322,2.515,323,2.515,324,3.289,325,4.324,326,2.515,327,2.515,328,2.515,329,3.665,330,2.515,331,3.289,332,2.515,333,2.515,334,2.515,335,2.515,336,2.515,337,2.515,338,2.515,339,2.515,340,2.515,341,3.289,342,2.515,343,2.515,344,2.515,345,2.515,346,2.515,347,2.515,348,2.515,349,3.289,350,3.289,351,2.515,352,2.515,353,2.515,354,2.515,355,2.515,356,2.515,357,2.515,358,2.515,359,2.515,360,2.515,361,2.515,362,2.515,363,2.515,364,2.515,365,2.515,366,2.515,367,2.515,368,2.515,369,2.515,370,2.515,371,2.515,372,2.515,373,2.515,374,2.515,375,2.515,376,2.515,377,2.515,378,2.515,379,2.515,380,2.515]],["title/modules.html",[381,2.382]],["body/modules.html",[24,0.074,63,0.064,64,0.074,65,0.064,381,2.702]],["title/overview.html",[382,2.382]],["body/overview.html",[2,1.708,24,0.073,63,0.063,64,0.073,65,0.063,68,2.112,290,3.065,382,2.654]],["title/additional-documentation/is-badge.html",[1,0.387,383,1.5,384,1.5]],["body/additional-documentation/is-badge.html",[1,0.878,3,0.933,12,1.15,14,1.007,16,3.162,17,2.885,18,2.035,24,0.064,25,0.596,26,0.799,30,1.15,31,1.788,32,1.788,33,1.788,34,1.788,35,1.788,36,1.788,37,1.788,38,1.788,39,1.788,40,1.15,41,1.15,43,1.15,45,1.788,47,1.15,58,0.596,60,0.617,63,0.043,64,0.057,65,0.043,217,1.423,262,2.395,263,1.423,385,1.788,386,1.788,387,2.395,388,3.137,389,2.342,390,2.342,391,3.137,392,3.137,393,3.137,394,4.055,395,3.137,396,3.137,397,3.137,398,3.137,399,4.209,400,3.137,401,3.137,402,3.137,403,1.788,404,2.342,405,2.395,406,1.788,407,1.788,408,1.788,409,1.788]],["title/additional-documentation/is-multiselect.html",[60,0.387,383,1.5,384,1.5]],["body/additional-documentation/is-multiselect.html",[1,0.677,12,1.485,14,0.711,18,1.088,19,1.346,21,1.346,23,1.088,24,0.079,25,0.876,26,0.876,30,1.485,40,1.485,41,1.088,43,1.485,47,1.485,60,0.677,63,0.04,64,0.055,65,0.04,67,0.711,70,1.689,71,1.471,72,0.97,74,1.485,79,2.307,81,3.117,83,1.691,84,1.691,85,2.82,86,2.307,87,1.691,88,2.307,89,3.285,90,1.691,94,1.691,102,2.307,110,1.346,121,1.691,122,1.691,126,1.691,128,1.691,130,2.626,131,1.691,132,2.307,134,1.346,136,1.691,137,1.691,138,1.691,139,1.836,141,1.691,142,1.691,143,1.691,144,1.691,145,1.691,148,1.691,149,1.691,150,1.691,154,1.691,155,2.307,162,2.307,163,1.691,217,1.346,263,1.346,385,1.691,386,1.691,387,2.307,403,1.691,405,2.307,406,1.691,407,1.691,408,1.691,409,1.691,410,2.216,411,2.216,412,2.216]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["0",{"_index":193,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["0/1",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":184,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["11/21",{"_index":241,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":290,"title":{},"body":{"index.html":{},"overview.html":{}}}],["200",{"_index":191,"title":{},"body":{"components/Multiselect.html":{}}}],["2018",{"_index":316,"title":{},"body":{"license.html":{}}}],["3",{"_index":134,"title":{},"body":{"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["3/5",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":240,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":237,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":348,"title":{},"body":{"license.html":{}}}],["action",{"_index":373,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["add",{"_index":302,"title":{},"body":{"index.html":{}}}],["additional",{"_index":383,"title":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["alert",{"_index":308,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":339,"title":{},"body":{"license.html":{}}}],["anywhere",{"_index":283,"title":{},"body":{"index.html":{}}}],["applications",{"_index":260,"title":{},"body":{"index.html":{}}}],["arising",{"_index":377,"title":{},"body":{"license.html":{}}}],["associated",{"_index":326,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":386,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["authors",{"_index":366,"title":{},"body":{"license.html":{}}}],["b",{"_index":299,"title":{},"body":{"index.html":{}}}],["background",{"_index":391,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["badge",{"_index":1,"title":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["badge.scss",{"_index":10,"title":{},"body":{"components/Badge.html":{}}}],["badges",{"_index":154,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["black",{"_index":38,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["border",{"_index":392,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["bottom",{"_index":400,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["branch",{"_index":296,"title":{},"body":{"index.html":{}}}],["build",{"_index":261,"title":{},"body":{"index.html":{}}}],["building",{"_index":259,"title":{},"body":{"index.html":{}}}],["built",{"_index":409,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["c",{"_index":315,"title":{},"body":{"license.html":{}}}],["cdn",{"_index":274,"title":{},"body":{"index.html":{}}}],["changed",{"_index":149,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["changes",{"_index":301,"title":{},"body":{"index.html":{}}}],["charge",{"_index":321,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":298,"title":{},"body":{"index.html":{}}}],["claim",{"_index":369,"title":{},"body":{"license.html":{}}}],["class",{"_index":53,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["click",{"_index":132,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["color",{"_index":16,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["commit",{"_index":300,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/Badge.html":{},"components/Multiselect.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{}}}],["component.isnur.com",{"_index":266,"title":{},"body":{"index.html":{}}}],["component.isnur.com/docs",{"_index":267,"title":{},"body":{"index.html":{}}}],["component_template",{"_index":57,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["componentinterface",{"_index":77,"title":{},"body":{"components/Multiselect.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{},"overview.html":{}}}],["componentusage",{"_index":276,"title":{},"body":{"index.html":{}}}],["componentwillload",{"_index":93,"title":{},"body":{"components/Multiselect.html":{}}}],["conditions",{"_index":347,"title":{},"body":{"license.html":{}}}],["connection",{"_index":379,"title":{},"body":{"license.html":{}}}],["const",{"_index":170,"title":{},"body":{"components/Multiselect.html":{}}}],["contract",{"_index":374,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":292,"title":{},"body":{"index.html":{}}}],["copies",{"_index":341,"title":{},"body":{"license.html":{}}}],["copy",{"_index":324,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":314,"title":{},"body":{"license.html":{}}}],["count",{"_index":162,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["coverage",{"_index":233,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":294,"title":{},"body":{"index.html":{}}}],["css",{"_index":389,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["custom",{"_index":390,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["customevent",{"_index":411,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["damages",{"_index":370,"title":{},"body":{"license.html":{}}}],["dark",{"_index":39,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["data",{"_index":289,"title":{},"body":{"index.html":{}}}],["deal",{"_index":328,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":380,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["defined",{"_index":21,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["demo",{"_index":264,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":403,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["depends",{"_index":412,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["description",{"_index":387,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["disabled",{"_index":79,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["display",{"_index":47,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["distribute",{"_index":337,"title":{},"body":{"license.html":{}}}],["document",{"_index":107,"title":{},"body":{"components/Multiselect.html":{}}}],["document.getelementbyid(\"select",{"_index":288,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":234,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["el",{"_index":215,"title":{},"body":{"components/Multiselect.html":{}}}],["element",{"_index":207,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["element.value",{"_index":210,"title":{},"body":{"components/Multiselect.html":{}}}],["elements",{"_index":144,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["emitted",{"_index":148,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["error",{"_index":35,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["etc",{"_index":287,"title":{},"body":{"index.html":{}}}],["event",{"_index":110,"title":{},"body":{"components/Multiselect.html":{},"license.html":{},"additional-documentation/is-multiselect.html":{}}}],["eventemitter",{"_index":146,"title":{},"body":{"components/Multiselect.html":{}}}],["events",{"_index":410,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["express",{"_index":357,"title":{},"body":{"license.html":{}}}],["false",{"_index":43,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["family",{"_index":395,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["feature",{"_index":295,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["files",{"_index":327,"title":{},"body":{"license.html":{}}}],["fill:#f9f,stroke:#333,stroke",{"_index":407,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["filtereditems",{"_index":177,"title":{},"body":{"components/Multiselect.html":{}}}],["first",{"_index":254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fitness",{"_index":362,"title":{},"body":{"license.html":{}}}],["following",{"_index":346,"title":{},"body":{"license.html":{}}}],["font",{"_index":394,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["fork",{"_index":293,"title":{},"body":{"index.html":{}}}],["format",{"_index":243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["format(first",{"_index":251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":232,"title":{},"body":{"components/Multiselect.html":{}}}],["free",{"_index":320,"title":{},"body":{"license.html":{}}}],["function",{"_index":139,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["functions",{"_index":249,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":344,"title":{},"body":{"license.html":{}}}],["getselected",{"_index":94,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["getting",{"_index":255,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":297,"title":{},"body":{"index.html":{}}}],["granted",{"_index":319,"title":{},"body":{"license.html":{}}}],["graph",{"_index":405,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["h",{"_index":50,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["handleclick",{"_index":95,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclick(event",{"_index":103,"title":{},"body":{"components/Multiselect.html":{}}}],["head",{"_index":280,"title":{},"body":{"index.html":{}}}],["height",{"_index":398,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["hereby",{"_index":318,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":137,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["holders",{"_index":367,"title":{},"body":{"license.html":{}}}],["host",{"_index":49,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["html",{"_index":286,"title":{},"body":{"index.html":{}}}],["htmlinputelement",{"_index":176,"title":{},"body":{"components/Multiselect.html":{}}}],["https://is",{"_index":265,"title":{},"body":{"index.html":{}}}],["https://unpkg.com/is",{"_index":275,"title":{},"body":{"index.html":{}}}],["id",{"_index":73,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"index.html":{}}}],["identifier",{"_index":235,"title":{},"body":{"coverage.html":{}}}],["ilabelto",{"_index":67,"title":{"interfaces/ILabelTo.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["implements",{"_index":76,"title":{},"body":{"components/Multiselect.html":{}}}],["implied",{"_index":358,"title":{},"body":{"license.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["included",{"_index":351,"title":{},"body":{"license.html":{}}}],["including",{"_index":331,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["index.html",{"_index":281,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{}}}],["install",{"_index":269,"title":{},"body":{"index.html":{}}}],["installation",{"_index":268,"title":{},"body":{"index.html":{}}}],["interact",{"_index":122,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["interface",{"_index":66,"title":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":68,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"overview.html":{}}}],["isclickinside",{"_index":171,"title":{},"body":{"components/Multiselect.html":{}}}],["iselectitem",{"_index":72,"title":{"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["isexpanded",{"_index":80,"title":{},"body":{"components/Multiselect.html":{}}}],["isselected",{"_index":197,"title":{},"body":{"components/Multiselect.html":{}}}],["item",{"_index":198,"title":{},"body":{"components/Multiselect.html":{}}}],["item.id",{"_index":201,"title":{},"body":{"components/Multiselect.html":{}}}],["item.name",{"_index":231,"title":{},"body":{"components/Multiselect.html":{}}}],["items",{"_index":81,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["jsx",{"_index":285,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":82,"title":{},"body":{"components/Multiselect.html":{}}}],["kind",{"_index":356,"title":{},"body":{"license.html":{}}}],["label",{"_index":130,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelselected",{"_index":83,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelto",{"_index":84,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["last",{"_index":253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":401,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["liability",{"_index":371,"title":{},"body":{"license.html":{}}}],["liable",{"_index":368,"title":{},"body":{"license.html":{}}}],["license",{"_index":312,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":36,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["limit",{"_index":85,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["limitation",{"_index":332,"title":{},"body":{"license.html":{}}}],["limited",{"_index":359,"title":{},"body":{"license.html":{}}}],["limittext",{"_index":86,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["list",{"_index":126,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["listen",{"_index":161,"title":{},"body":{"components/Multiselect.html":{}}}],["listen('click",{"_index":105,"title":{},"body":{"components/Multiselect.html":{}}}],["make",{"_index":45,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["merchantability",{"_index":361,"title":{},"body":{"license.html":{}}}],["merge",{"_index":335,"title":{},"body":{"license.html":{}}}],["message",{"_index":142,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["method",{"_index":100,"title":{},"body":{"components/Multiselect.html":{}}}],["methods",{"_index":19,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["middle",{"_index":252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":248,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":313,"title":{},"body":{"license.html":{}}}],["modal",{"_index":309,"title":{},"body":{"index.html":{}}}],["modify",{"_index":334,"title":{},"body":{"license.html":{}}}],["modules",{"_index":381,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":163,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["mouseevent",{"_index":104,"title":{},"body":{"components/Multiselect.html":{}}}],["multiselect",{"_index":60,"title":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["multiselect.scss",{"_index":78,"title":{},"body":{"components/Multiselect.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/is-badge.html":{}}}],["new",{"_index":245,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["newvalue",{"_index":116,"title":{},"body":{"components/Multiselect.html":{}}}],["noninfringement",{"_index":365,"title":{},"body":{"license.html":{}}}],["notice",{"_index":349,"title":{},"body":{"license.html":{}}}],["npm",{"_index":271,"title":{},"body":{"index.html":{}}}],["null",{"_index":156,"title":{},"body":{"components/Multiselect.html":{}}}],["number",{"_index":74,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["obj.id",{"_index":200,"title":{},"body":{"components/Multiselect.html":{}}}],["obj['name'].tolowercase().includes(this.keyword.tolowercase",{"_index":213,"title":{},"body":{"components/Multiselect.html":{}}}],["obtaining",{"_index":323,"title":{},"body":{"license.html":{}}}],["oldvalue",{"_index":113,"title":{},"body":{"components/Multiselect.html":{}}}],["onfiltereditems",{"_index":206,"title":{},"body":{"components/Multiselect.html":{}}}],["onselected",{"_index":87,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["open",{"_index":258,"title":{},"body":{"index.html":{}}}],["option",{"_index":131,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["optional",{"_index":15,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":30,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["origin",{"_index":304,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":376,"title":{},"body":{"license.html":{}}}],["out",{"_index":378,"title":{},"body":{"license.html":{}}}],["outside",{"_index":187,"title":{},"body":{"components/Multiselect.html":{}}}],["overview",{"_index":382,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":399,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["page",{"_index":384,"title":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["pagination",{"_index":310,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":363,"title":{},"body":{"license.html":{}}}],["pass",{"_index":145,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["permission",{"_index":317,"title":{},"body":{"license.html":{}}}],["permit",{"_index":342,"title":{},"body":{"license.html":{}}}],["person",{"_index":322,"title":{},"body":{"license.html":{}}}],["persons",{"_index":343,"title":{},"body":{"license.html":{}}}],["pick",{"_index":150,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder",{"_index":88,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder={this.placeholder",{"_index":220,"title":{},"body":{"components/Multiselect.html":{}}}],["portions",{"_index":353,"title":{},"body":{"license.html":{}}}],["primary",{"_index":31,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["private",{"_index":174,"title":{},"body":{"components/Multiselect.html":{}}}],["process",{"_index":141,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise",{"_index":102,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise.resolve(this.selected",{"_index":164,"title":{},"body":{"components/Multiselect.html":{}}}],["prop",{"_index":28,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["properties",{"_index":14,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["property",{"_index":385,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["provided",{"_index":354,"title":{},"body":{"license.html":{}}}],["publish",{"_index":336,"title":{},"body":{"license.html":{}}}],["pull",{"_index":306,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":364,"title":{},"body":{"license.html":{}}}],["push",{"_index":303,"title":{},"body":{"index.html":{}}}],["put",{"_index":278,"title":{},"body":{"index.html":{}}}],["radius",{"_index":393,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["ref={el",{"_index":219,"title":{},"body":{"components/Multiselect.html":{}}}],["remove",{"_index":70,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["remove={this.isselected(item",{"_index":227,"title":{},"body":{"components/Multiselect.html":{}}}],["render",{"_index":20,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["renderselecteditems",{"_index":178,"title":{},"body":{"components/Multiselect.html":{}}}],["request",{"_index":307,"title":{},"body":{"index.html":{}}}],["rest",{"_index":136,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["restriction",{"_index":330,"title":{},"body":{"license.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["return",{"_index":54,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["returns",{"_index":23,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-multiselect.html":{}}}],["right",{"_index":402,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["rights",{"_index":333,"title":{},"body":{"license.html":{}}}],["rounded",{"_index":17,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["saveyou",{"_index":272,"title":{},"body":{"index.html":{}}}],["scoped",{"_index":11,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["script",{"_index":277,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":32,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["select",{"_index":71,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["select.items",{"_index":291,"title":{},"body":{"index.html":{}}}],["select={!this.isselected(item",{"_index":229,"title":{},"body":{"components/Multiselect.html":{}}}],["selected",{"_index":89,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selected={this.isselected(item",{"_index":225,"title":{},"body":{"components/Multiselect.html":{}}}],["selected[this.limit",{"_index":183,"title":{},"body":{"components/Multiselect.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["sell",{"_index":340,"title":{},"body":{"license.html":{}}}],["setitems",{"_index":96,"title":{},"body":{"components/Multiselect.html":{}}}],["setitems(newvalue",{"_index":112,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected",{"_index":97,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected(newvalue",{"_index":117,"title":{},"body":{"components/Multiselect.html":{}}}],["settimeout",{"_index":189,"title":{},"body":{"components/Multiselect.html":{}}}],["shall",{"_index":350,"title":{},"body":{"license.html":{}}}],["show",{"_index":155,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["shown",{"_index":143,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["showselectedbadge",{"_index":90,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["similar",{"_index":279,"title":{},"body":{"index.html":{}}}],["size",{"_index":396,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["software",{"_index":325,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{}}}],["src/.../utils.ts",{"_index":250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components/badge/badge.tsx",{"_index":6,"title":{},"body":{"components/Badge.html":{},"coverage.html":{}}}],["src/components/badge/badge.tsx:12",{"_index":29,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:17",{"_index":46,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:22",{"_index":44,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:24",{"_index":22,"title":{},"body":{"components/Badge.html":{}}}],["src/components/multiselect/multiselect.interface.tsx",{"_index":69,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx",{"_index":75,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx:13",{"_index":120,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:18",{"_index":151,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:184",{"_index":98,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:194",{"_index":111,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:23",{"_index":125,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:28",{"_index":152,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:33",{"_index":133,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:41",{"_index":135,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:46",{"_index":140,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:51",{"_index":129,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:56",{"_index":153,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:58",{"_index":124,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:59",{"_index":127,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:60",{"_index":159,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:61",{"_index":157,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:67",{"_index":101,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:74",{"_index":147,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:77",{"_index":115,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:86",{"_index":119,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:93",{"_index":108,"title":{},"body":{"components/Multiselect.html":{}}}],["src/utils/utils.ts",{"_index":242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":256,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":123,"title":{},"body":{"components/Multiselect.html":{}}}],["statements",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["stencil/core",{"_index":51,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["stenciljs",{"_index":263,"title":{},"body":{"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["string",{"_index":26,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["style",{"_index":217,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["styleurl",{"_index":9,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["subject",{"_index":345,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":338,"title":{},"body":{"license.html":{}}}],["submit",{"_index":305,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":352,"title":{},"body":{"license.html":{}}}],["success",{"_index":33,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["table",{"_index":247,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":311,"title":{},"body":{"index.html":{}}}],["tag",{"_index":8,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["tags",{"_index":91,"title":{},"body":{"components/Multiselect.html":{}}}],["target",{"_index":106,"title":{},"body":{"components/Multiselect.html":{}}}],["td",{"_index":406,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["template",{"_index":284,"title":{},"body":{"index.html":{}}}],["text",{"_index":18,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["textinput",{"_index":175,"title":{},"body":{"components/Multiselect.html":{}}}],["textselected",{"_index":92,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems",{"_index":211,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.length",{"_index":222,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.map((item",{"_index":223,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isexpanded",{"_index":188,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isselected(item",{"_index":203,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items",{"_index":165,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items.filter(obj",{"_index":212,"title":{},"body":{"components/Multiselect.html":{}}}],["this.keyword",{"_index":209,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelselected",{"_index":226,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.remove",{"_index":228,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.select",{"_index":230,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limit",{"_index":182,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limittext(count",{"_index":185,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect",{"_index":214,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect.contains(event.target",{"_index":172,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onfiltereditems",{"_index":168,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onselected.emit(this.selected",{"_index":205,"title":{},"body":{"components/Multiselect.html":{}}}],["this.placeholder",{"_index":158,"title":{},"body":{"components/Multiselect.html":{}}}],["this.renderselecteditems",{"_index":196,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected",{"_index":167,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.filter(obj",{"_index":204,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.length",{"_index":181,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.map((item",{"_index":179,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.some(obj",{"_index":199,"title":{},"body":{"components/Multiselect.html":{}}}],["this.showselectedbadge",{"_index":194,"title":{},"body":{"components/Multiselect.html":{}}}],["this.tags",{"_index":195,"title":{},"body":{"components/Multiselect.html":{}}}],["this.text",{"_index":55,"title":{},"body":{"components/Badge.html":{}}}],["this.textinput",{"_index":208,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textinput.focus",{"_index":190,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textselected",{"_index":166,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(!this.isexpanded)}>&nbsp",{"_index":221,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(false",{"_index":173,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(true",{"_index":216,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item",{"_index":224,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item)}>x",{"_index":180,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateplaceholder",{"_index":169,"title":{},"body":{"components/Multiselect.html":{}}}],["toggle",{"_index":186,"title":{},"body":{"components/Multiselect.html":{}}}],["top",{"_index":262,"title":{},"body":{"index.html":{},"additional-documentation/is-badge.html":{}}}],["tort",{"_index":375,"title":{},"body":{"license.html":{}}}],["true",{"_index":12,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["u2713",{"_index":128,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["undefined",{"_index":388,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["unpkg",{"_index":273,"title":{},"body":{"index.html":{}}}],["updateitems",{"_index":202,"title":{},"body":{"components/Multiselect.html":{}}}],["updateplaceholder",{"_index":192,"title":{},"body":{"components/Multiselect.html":{}}}],["use",{"_index":282,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":404,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["user",{"_index":121,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["using",{"_index":270,"title":{},"body":{"index.html":{}}}],["value",{"_index":42,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["var",{"_index":56,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["void",{"_index":99,"title":{},"body":{"components/Multiselect.html":{}}}],["warning",{"_index":34,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["warranties",{"_index":360,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":355,"title":{},"body":{"license.html":{}}}],["watch",{"_index":160,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('items",{"_index":114,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('selected",{"_index":118,"title":{},"body":{"components/Multiselect.html":{}}}],["web",{"_index":257,"title":{},"body":{"index.html":{}}}],["weight",{"_index":397,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["whether",{"_index":372,"title":{},"body":{"license.html":{}}}],["white",{"_index":37,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["width:4px",{"_index":408,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["within",{"_index":138,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["without",{"_index":329,"title":{},"body":{"license.html":{}}}],["zindex",{"_index":218,"title":{},"body":{"components/Multiselect.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Badge.html":{"url":"components/Badge.html","title":"component - Badge","body":"\n                   \n\n\n\n\n\n  Components\n  Badge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/badge/badge.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-badge\n            \n\n            \n                styleUrl\n                badge.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/badge/badge.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:22\n                            \n                        \n\n                \n                    \n                        If true, make the badge rounded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:17\n                            \n                        \n\n                \n                    \n                        The text to display in the badge.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-badge',\n  styleUrl: 'badge.scss',\n  scoped: true\n})\nexport class Badge {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * The text to display in the badge.\n   */\n  @Prop() text: string;\n\n  /**\n   * If `true`, make the badge rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  render() {\n    return (\n      \n        {this.text}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Badge'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelTo.html":{"url":"interfaces/ILabelTo.html","title":"interface - ILabelTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabelTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        remove\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectItem.html":{"url":"interfaces/ISelectItem.html","title":"interface - ISelectItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISelectItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Multiselect.html":{"url":"components/Multiselect.html","title":"component - Multiselect","body":"\n                   \n\n\n\n\n\n  Components\n  Multiselect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/multiselect/multiselect.tsx\n\n\n\n\n    \n        Implements\n    \n    \n                ComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-multiselect\n            \n\n            \n                styleUrl\n                multiselect.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isExpanded\n                            \n                            \n                                items\n                            \n                            \n                                keyword\n                            \n                            \n                                labelSelected\n                            \n                            \n                                labelTo\n                            \n                            \n                                limit\n                            \n                            \n                                limitText\n                            \n                            \n                                onSelected\n                            \n                            \n                                placeholder\n                            \n                            \n                                selected\n                            \n                            \n                                showSelectedBadge\n                            \n                            \n                                tags\n                            \n                            \n                                textSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                getSelected\n                            \n                            \n                                handleClick\n                            \n                            \n                                render\n                            \n                            \n                                setItems\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentWillLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentWillLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelected\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Method()\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:67\n                \n            \n\n\n            \n                \n                    Get the selected items.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Listen('click', {target: 'document'})\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('items')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelected(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('selected')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:13\n                            \n                        \n\n                \n                    \n                        If true, the user cannot interact with the select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:23\n                            \n                        \n\n                \n                    \n                        The options list items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2713'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:51\n                            \n                        \n\n                \n                    \n                        The label when option is selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILabelTo\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:33\n                            \n                        \n\n                \n                    \n                        The label to remove or select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:41\n                            \n                        \n\n                \n                    \n                        Limit the display of selected options. The rest will be hidden within the limitText string.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:46\n                            \n                        \n\n                \n                    \n                        Function that process the message shown when selected elements pass the defined limit.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:74\n                            \n                        \n\n                \n                    \n                        Emitted when the selected items has changed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Pick some\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:18\n                            \n                        \n\n                \n                    \n                        The text to display when not selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:28\n                            \n                        \n\n                \n                    \n                        The selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectedBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:56\n                            \n                        \n\n                \n                    \n                        If true, The badges will show selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.placeholder\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentInterface, Host, Prop, State, Method, Watch, Listen, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-multiselect',\n  styleUrl: 'multiselect.scss',\n  scoped: true\n})\nexport class Multiselect implements ComponentInterface {\n\n  /**\n   * If `true`, the user cannot interact with the select.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The text to display when not selected items.\n   */\n  @Prop() placeholder: string = \"Pick some\";\n\n  /**\n   * The options list items.\n   */\n  @Prop() items: ISelectItem[] = [];\n\n  /**\n   * The selected items.\n   */\n  @Prop() selected: ISelectItem[] = [];\n\n  /**\n   * The label to remove or select.\n   */\n  @Prop() labelTo: ILabelTo = {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  };\n\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   */\n  @Prop() limit: number = 3;\n\n  /**\n   * Function that process the message shown when selected elements pass the defined limit.\n   */\n  @Prop() limitText: Function = (count: number) => 'and ' + count + ' more';\n\n  /**\n   * The label when option is selected.\n   */\n  @Prop() labelSelected: string = '\\u2713';\n\n  /**\n   * If `true`, The badges will show selected items.\n   */\n  @Prop() showSelectedBadge: boolean = false;\n\n  @State() isExpanded: boolean = false;\n  @State() keyword: string = '';\n  @State() textSelected: string = this.placeholder;\n  @State() tags = null;\n\n  /**\n   * Get the selected items.\n   */\n  @Method()\n  getSelected(): Promise {\n    return Promise.resolve(this.selected);\n  }\n\n  /**\n   * Emitted when the selected items has changed.\n   */\n  @Event() onSelected: EventEmitter;\n\n  @Watch('items')\n  setItems(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.items = newValue;\n      this.textSelected = this.placeholder;\n      this.selected = [];\n      this.onFilteredItems();\n    }\n  }\n  @Watch('selected')\n  setSelected(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.updatePlaceholder();\n    }\n  }\n\n  @Listen('click', { target: 'document' })\n  handleClick(event: MouseEvent) {\n    const isClickInside = this.multiselect.contains(event.target);\n\n    if (!isClickInside) {\n      this.toggle(false, true);\n    }\n  }\n\n  private textInput?: HTMLInputElement;\n  private multiselect?: any;\n  private filteredItems: ISelectItem[] = this.items;\n\n  private renderSelectedItems = () => {\n    let selected = [];\n    if (this.selected) {\n      this.selected.map((item, i) => {\n        if (i \n              \n               this.updateItems(item)}>x\n            \n          );\n        } else {\n          const count = this.selected.length - this.limit;\n          selected[this.limit + 1] = {this.limitText(count)}\n        }\n      });\n    }\n    return selected;\n  };\n\n  private toggle = (state: boolean, outside?: boolean) => {\n    this.isExpanded = state;\n    this.updatePlaceholder();\n    if (!outside) {\n      if (this.isExpanded) {\n        setTimeout(() => {\n          this.textInput.focus();\n        }, 200);\n      }\n    }\n  };\n\n  private updatePlaceholder() {\n    this.textSelected = this.placeholder;\n    if (this.selected && this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n    if (this.isExpanded) {\n      this.textSelected = '';\n    }\n  }\n\n  private isSelected = (item: ISelectItem) => {\n    if (this.selected) {\n      return this.selected.some(obj => obj.id === item.id)\n    }\n    return false;\n  };\n\n  private updateItems = (item: ISelectItem) => {\n    if (this.isSelected(item)) {\n      this.selected = this.selected.filter(obj => {\n        return obj.id !== item.id;\n      });\n    } else {\n      if (this.selected && this.selected.length > 0) {\n        this.selected = [...this.selected, item];\n      } else {\n        this.selected = [item];\n      }\n    }\n    this.onSelected.emit(this.selected);\n  };\n\n  private onFilteredItems = () => {\n    const element = this.textInput;\n    if (element) {\n      this.keyword = element.value;\n      this.filteredItems = this.items.filter(obj => {\n        return obj['name'].toLowerCase().includes(this.keyword.toLowerCase());\n      });\n    } else {\n      this.filteredItems = this.items;\n    }\n  };\n\n  componentWillLoad() {\n    this.textSelected = this.placeholder;\n    if (this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n  }\n\n  render() {\n    return (\n       this.multiselect = el}>\n        \n\n           this.toggle(true)} style={{\n            zIndex: this.isExpanded ? '-1' : '0'\n          }}>\n          \n\n          \n            {this.showSelectedBadge && this.selected && this.selected.length > 0 ? this.tags : this.textSelected}\n          \n\n          {this.isExpanded &&\n            \n               this.onFilteredItems()}\n                ref={el => this.textInput = el}\n                placeholder={this.placeholder}\n              />\n            \n          }\n           this.toggle(!this.isExpanded)}>&nbsp;\n        \n        {\n          this.isExpanded &&\n          \n            \n              {\n                this.filteredItems.length > 0 ? this.filteredItems.map((item: ISelectItem, i) => {\n                  return (\n                     this.updateItems(item)}\n                      label-selected={this.isSelected(item) ? this.labelSelected : null}\n                      label-to-remove={this.isSelected(item) ? this.labelTo.remove : null}\n                      label-to-select={!this.isSelected(item) ? this.labelTo.select : null}\n                    >{item.name}\n                  )\n                }) : Not found\n              }\n            \n          \n        }\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Multiselect'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/badge/badge.tsx\n            \n            component\n            Badge\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ILabelTo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ISelectItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.tsx\n            \n            component\n            Multiselect\n            \n                52 %\n                (11/21)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            function\n            format\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            format   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(first, middle, last)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    middle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIs-Web-Component\n  \n    \nOpen source web components for building web applications. Build on top StencilJS.\nDemo\nhttps://is-web-component.isnur.com/\nDocumentation\nhttps://is-web-component.isnur.com/docs/\nInstallation\nYou can install using NPM:\nnpm i is-web-component --saveYou can install using unpkg cdn:\nhttps://unpkg.com/is-web-componentUsage\nScript tag\n\nPut a script tag similar to this\n  in the head of your index.html\n\nThen you can use the element anywhere in your template, JSX, html etc.\n  is-badge\n  \n\n  is-multiselect\n  \n\n  \n    var select = document.getElementById(\"select\");\n    var data = [{\n      id: 1,\n      name: 'Data 1'\n    }, {\n      id: 2,\n      name: 'Data 2'\n    }, {\n      id: 3,\n      name: 'Data 3'\n    }];\n    select.items = data;\n  \n\nContributing\n\nFork it!\nCreate your feature branch: git checkout -b my-new-feature\nCommit your changes: git commit -am 'Add some feature'\nPush to the branch: git push origin my-new-feature\nSubmit a pull request\n\nComponents\n\n is-alert\n is-badge\n is-modal\n is-multiselect\n is-pagination\n is-table\n is-tabs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-badge.html":{"url":"additional-documentation/is-badge.html","title":"additional-page - is-badge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-badge\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the badge rounded.\nboolean\nfalse\n\n\ntext\ntext\nThe text to display in the badge.\nstring\nundefined\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the badge\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the badge\n\n\n--font-family\nFont family of the badge text\n\n\n--font-size\nFont size of the badge text\n\n\n--font-weight\nFont weight of the badge text\n\n\n--height\nHeight of the badge\n\n\n--padding-bottom\nPadding bottom of the badge\n\n\n--padding-left\nPadding left of the badge\n\n\n--padding-right\nPadding right of the badge\n\n\n--padding-top\nPadding top of the badge\n\n\n\nDependencies\nUsed by\n\nis-multiselect\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-badge fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-multiselect.html":{"url":"additional-documentation/is-multiselect.html","title":"additional-page - is-multiselect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-multiselect\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ndisabled\ndisabled\nIf true, the user cannot interact with the select.\nboolean\nfalse\n\n\nitems\n--\nThe options list items.\nISelectItem[]\n[]\n\n\nlabelSelected\nlabel-selected\nThe label when option is selected.\nstring\n'\\u2713'\n\n\nlabelTo\n--\nThe label to remove or select.\nILabelTo\n{     remove: 'Click to Remove',     select: 'Click to Select'   }\n\n\nlimit\nlimit\nLimit the display of selected options. The rest will be hidden within the limitText string.\nnumber\n3\n\n\nlimitText\n--\nFunction that process the message shown when selected elements pass the defined limit.\nFunction\n(count: number) => 'and ' + count + ' more'\n\n\nplaceholder\nplaceholder\nThe text to display when not selected items.\nstring\n\"Pick some\"\n\n\nselected\n--\nThe selected items.\nISelectItem[]\n[]\n\n\nshowSelectedBadge\nshow-selected-badge\nIf true, The badges will show selected items.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nonSelected\nEmitted when the selected items has changed.\nCustomEvent\n\n\n\nMethods\ngetSelected() => Promise\nGet the selected items.\nReturns\nType: Promise\nDependencies\nDepends on\n\nis-badge\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-multiselect fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
