var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/Alert.html",[0,0.686,1,0.686]],["body/components/Alert.html",[0,0.618,1,1.18,2,0.88,3,0.758,4,0.565,5,0.565,6,1.165,7,0.954,8,1.239,9,1.484,10,2.311,11,1.484,12,1.639,13,0.475,14,0.618,15,2.72,16,2.225,17,2.225,18,1.969,19,2.225,20,1.859,21,2.837,22,2.225,23,2.225,24,1.859,25,1.239,26,3.202,27,3.202,28,2.056,29,2.309,30,1.485,31,1.28,32,0.068,33,1.813,34,1.485,35,1.485,36,0.897,37,1.398,38,1.398,39,2.359,40,2.615,41,2.803,42,1.485,43,3.11,44,2.511,45,1.485,46,1.813,47,1.218,48,0.88,49,1.485,50,1.813,51,0.705,52,1.813,53,1.485,54,1.813,55,1.813,56,0.88,57,1.485,58,0.88,59,1.239,60,1.239,61,1.239,62,1.239,63,1.239,64,1.239,65,1.239,66,1.239,67,1.239,68,2.511,69,2.225,70,1.485,71,2.311,72,1.822,73,1.485,74,2.225,75,1.28,76,1.485,77,1.239,78,1.813,79,0.88,80,1.485,81,1.043,82,0.954,83,0.954,84,0.954,85,0.954,86,0.954,87,0.954,88,1.813,89,1.485,90,1.485,91,1.485,92,1.485,93,1.822,94,1.485,95,1.485,96,1.485,97,1.485,98,1.485,99,1.485,100,1.485,101,1.485,102,1.485,103,1.485,104,1.716,105,0.954,106,0.705,107,1.822,108,0.264,109,0.327,110,0.954,111,0.954,112,0.02,113,0.031,114,0.02]],["title/components/Badge.html",[0,0.686,108,0.457]],["body/components/Badge.html",[0,0.844,1,0.606,2,1.203,3,0.972,4,0.863,5,0.863,7,1.456,8,1.694,9,2.029,11,2.029,12,1.497,13,0.726,14,0.844,18,2.108,20,2.216,24,2.216,25,1.694,28,2.526,29,2.108,31,1.023,32,0.067,36,0.801,37,1.203,38,0.863,39,1.456,40,2.335,41,2.821,51,0.866,56,1.574,58,1.203,59,1.694,60,1.694,61,1.694,62,1.694,63,1.694,64,1.694,65,1.694,66,1.694,67,1.694,79,1.203,81,1.426,82,1.456,83,1.456,84,1.456,85,1.456,86,1.456,87,1.456,93,1.456,104,2.108,105,1.456,106,0.866,107,2.335,108,0.82,109,0.5,110,1.456,111,1.456,112,0.03,113,0.042,114,0.03,115,1.779,116,3.16,117,2.268,118,2.268,119,2.268,120,2.268,121,1.694,122,2.268]],["title/interfaces/ILabelTo.html",[123,1.157,124,0.976]],["body/interfaces/ILabelTo.html",[3,0.899,4,1.281,5,1.281,13,1.077,14,1.092,32,0.065,36,0.9,47,1.281,51,1.064,106,0.741,112,0.045,113,0.055,114,0.045,123,1.844,124,1.556,125,2.161,126,2.161,127,2.455,128,2.066,129,1.281,130,2.161]],["title/interfaces/ISelectItem.html",[123,1.157,129,0.976]],["body/interfaces/ISelectItem.html",[3,0.899,4,1.281,5,1.281,13,1.077,14,1.092,32,0.065,36,0.9,47,1.676,51,1.034,106,1.009,112,0.045,113,0.055,114,0.045,123,1.844,124,1.281,125,2.161,126,2.161,127,1.803,128,1.518,129,1.556,130,2.941]],["title/components/Multiselect.html",[0,0.686,109,0.565]],["body/components/Multiselect.html",[0,0.364,1,0.209,2,0.518,3,0.209,4,0.298,5,0.298,7,0.503,8,0.73,9,0.874,11,0.874,12,1.097,13,0.251,14,0.364,18,0.968,22,1.068,25,0.73,28,1.386,29,2.241,31,1.21,32,0.069,33,1.693,36,0.861,37,1.021,38,1.382,39,2.331,40,2.578,41,2.635,47,0.931,48,0.518,51,0.733,56,0.518,58,1.021,68,2.104,69,2.698,72,0.874,74,1.417,75,0.974,77,0.73,79,1.097,82,0.503,83,0.503,84,0.503,85,0.503,86,0.503,87,0.503,88,2.509,93,1.96,104,1.157,105,0.503,106,0.635,107,1.16,108,0.139,109,0.635,110,0.503,111,0.503,112,0.011,113,0.018,114,0.011,121,1.157,124,0.518,127,1.438,128,1.377,129,1.545,131,0.614,132,1.362,133,1.807,134,1.362,135,1.417,136,1.807,137,3.066,138,1.807,139,1.417,140,1.417,141,2.26,142,1.918,143,1.417,144,1.417,145,1.417,146,3.377,147,1.417,148,1.807,149,1.807,150,2.159,151,1.693,152,1.362,153,1.362,154,1.362,155,0.783,156,1.807,157,0.783,158,1.068,159,1.362,160,1.807,161,1.362,162,1.362,163,1.362,164,0.783,165,1.417,166,0.783,167,1.362,168,3.053,169,1.362,170,0.783,171,2.446,172,1.362,173,1.362,174,0.783,175,0.783,176,1.068,177,1.068,178,0.783,179,0.783,180,1.068,181,0.783,182,1.068,183,0.783,184,2.26,185,1.068,186,1.693,187,0.783,188,0.783,189,1.068,190,1.068,191,1.068,192,1.386,193,0.783,194,1.068,195,1.068,196,1.068,197,1.068,198,1.068,199,0.783,200,1.068,201,0.783,202,1.068,203,1.068,204,0.783,205,0.783,206,0.783,207,1.068,208,1.068,209,0.783,210,2.446,211,0.783,212,0.783,213,0.783,214,1.417,215,0.614,216,0.783,217,1.807,218,2.882,219,3.328,220,1.362,221,1.362,222,1.807,223,1.362,224,0.783,225,0.783,226,0.783,227,0.783,228,0.783,229,0.783,230,0.783,231,0.783,232,3.053,233,0.783,234,0.783,235,1.068,236,0.783,237,0.783,238,1.362,239,3.053,240,0.783,241,0.783,242,0.783,243,0.783,244,2.104,245,1.807,246,1.807,247,1.362,248,0.783,249,2.159,250,0.783,251,1.362,252,1.362,253,0.783,254,0.783,255,0.783,256,0.783,257,0.783,258,0.783,259,1.362,260,0.783,261,0.783,262,1.362,263,0.783,264,0.783,265,0.783,266,0.783,267,0.503,268,0.783,269,0.783,270,0.783,271,0.783,272,0.783,273,0.783,274,0.783,275,0.783,276,0.783,277,0.783,278,0.783,279,0.783,280,0.783,281,0.783,282,0.783]],["title/contributing.html",[283,1.396,284,1.396,285,1.396]],["body/contributing.html",[2,1.393,32,0.055,81,1.274,112,0.038,113,0.049,114,0.038,285,1.813,286,2.823,287,3.661,288,2.823,289,2.823,290,2.823,291,2.823,292,2.823,293,2.823,294,4.455,295,3.661,296,4.3,297,2.823,298,2.823,299,3.494,300,2.823,301,3.661,302,3.187,303,3.187,304,4.3,305,2.871,306,2.823,307,2.823,308,2.823,309,2.823,310,4.064,311,4.3,312,4.064,313,2.823,314,3.661,315,2.823,316,2.823,317,2.823,318,2.823,319,2.823,320,2.823,321,2.823,322,2.823,323,2.823,324,2.823,325,2.823,326,2.823,327,2.823,328,2.214,329,2.823,330,2.823,331,2.823,332,3.661,333,2.823,334,2.823,335,2.823,336,2.823,337,2.214,338,2.214,339,2.823,340,1.513,341,2.823,342,2.823]],["title/coverage.html",[343,2.696]],["body/coverage.html",[0,1.166,1,0.88,5,1.254,6,2.584,32,0.065,36,0.726,108,0.586,109,0.726,112,0.044,113,0.054,114,0.044,115,2.584,123,1.821,124,1.254,126,2.591,129,1.254,131,2.584,192,2.115,244,3.422,299,2.584,343,2.584,344,2.115,345,3.295,346,3.295,347,3.295,348,3.295,349,3.295,350,3.295,351,4.036,352,3.295,353,3.295,354,2.584,355,2.584,356,3.295,357,3.295,358,2.584]],["title/miscellaneous/functions.html",[359,1.705,360,2.406]],["body/miscellaneous/functions.html",[13,1.155,18,1.934,31,1.628,32,0.063,51,0.795,106,0.795,112,0.048,113,0.057,114,0.048,165,2.83,354,2.83,355,3.343,359,2.83,360,2.83,361,3.609,362,3.609,363,4.263,364,4.263,365,3.609]],["title/index.html",[13,0.696,283,1.396,284,1.396]],["body/index.html",[0,0.956,1,0.728,2,1.362,3,0.728,4,1.037,8,1.918,32,0.065,48,1.362,72,1.75,104,1.918,106,0.88,108,0.637,109,0.788,112,0.037,113,0.048,114,0.037,128,1.23,130,2.565,235,2.806,285,1.75,302,2.137,303,2.806,328,3.614,337,2.137,338,2.806,344,1.75,358,2.137,366,2.726,367,2.726,368,1.75,369,1.461,370,2.726,371,3.578,372,2.726,373,2.726,374,2.726,375,3.578,376,3.578,377,2.726,378,2.726,379,2.726,380,2.726,381,2.726,382,3.578,383,2.726,384,2.726,385,2.726,386,2.726,387,2.137,388,2.726,389,2.726,390,2.726,391,2.726,392,2.726,393,2.726,394,4.405,395,2.806,396,2.726,397,2.726,398,2.726,399,2.726,400,2.726,401,2.726,402,2.726,403,2.726,404,2.726,405,2.726,406,2.726,407,2.726,408,2.726,409,2.726]],["title/license.html",[283,1.396,284,1.396,410,1.705]],["body/license.html",[32,0.049,75,1.281,112,0.038,113,0.049,114,0.038,305,2.227,344,1.824,387,2.882,410,2.227,411,2.84,412,4.075,413,2.84,414,2.84,415,3.676,416,2.84,417,2.84,418,2.84,419,2.84,420,2.84,421,2.84,422,3.676,423,4.766,424,2.84,425,2.84,426,4.075,427,2.84,428,3.676,429,2.84,430,2.84,431,2.84,432,2.84,433,2.84,434,2.84,435,2.84,436,2.84,437,2.84,438,3.676,439,2.84,440,2.84,441,2.84,442,2.84,443,2.84,444,2.84,445,2.84,446,3.676,447,3.676,448,2.84,449,2.84,450,2.84,451,2.84,452,2.84,453,2.84,454,2.84,455,2.84,456,2.84,457,2.84,458,2.84,459,2.84,460,2.84,461,2.84,462,2.84,463,2.84,464,2.84,465,2.84,466,2.84,467,2.84,468,2.84,469,2.84,470,2.84,471,2.84,472,2.84,473,2.84,474,2.84,475,2.84,476,2.84,477,2.84]],["title/modules.html",[478,2.696]],["body/modules.html",[32,0.06,112,0.052,113,0.06,114,0.052,478,3.051]],["title/overview.html",[479,2.696]],["body/overview.html",[2,1.457,32,0.059,48,1.457,112,0.051,113,0.059,114,0.051,125,2.458,395,3.002,479,3.002]],["title/additional-documentation/is-alert.html",[1,0.581,480,1.396,481,1.396]],["body/additional-documentation/is-alert.html",[1,1.292,3,0.67,12,1.631,14,0.905,15,2.656,16,2.656,17,1.967,19,1.967,20,2.419,23,1.967,24,2.199,32,0.045,36,0.746,37,1.459,38,0.955,43,3.463,44,2.656,46,1.967,47,1.289,48,0.955,50,1.967,51,0.746,52,1.967,54,1.967,55,1.967,56,1.68,58,0.955,59,1.344,60,1.344,61,1.344,62,1.344,63,1.344,64,1.344,65,1.344,66,1.344,67,1.344,75,1.132,77,1.344,78,1.967,79,0.955,81,1.132,106,0.553,108,0.446,112,0.034,113,0.045,114,0.034,340,1.344,368,2.174,369,1.344,482,1.611,483,2.461,484,2.509,485,2.509,486,1.611,487,1.967,488,1.967,489,1.967,490,1.967,491,2.656,492,2.656,493,2.656,494,3.463,495,2.656,496,2.656,497,2.656,498,3.6,499,2.656,500,2.656,501,2.656,502,1.611]],["title/additional-documentation/is-badge.html",[108,0.387,480,1.396,481,1.396]],["body/additional-documentation/is-badge.html",[3,0.71,12,1.011,14,0.94,20,2.454,24,2.251,32,0.053,36,0.585,37,1.011,38,1.011,51,0.775,56,1.743,58,1.011,59,1.424,60,1.424,61,1.424,62,1.424,63,1.424,64,1.424,65,1.424,66,1.424,67,1.424,79,1.011,81,1.199,106,0.585,108,0.874,109,0.775,112,0.036,113,0.047,114,0.036,121,1.424,267,1.706,340,1.424,368,2.259,369,1.424,482,1.706,483,2.259,486,2.259,489,2.083,490,2.083,491,2.759,492,2.759,493,2.759,494,3.52,495,2.759,496,2.759,497,2.759,498,3.646,499,2.759,500,2.759,501,2.759,502,1.706,503,3.519,504,2.083,505,2.657,506,2.759,507,2.083,508,2.083,509,2.083]],["title/additional-documentation/is-multiselect.html",[109,0.479,480,1.396,481,1.396]],["body/additional-documentation/is-multiselect.html",[12,1.275,14,0.66,25,1.323,29,1.323,31,1.114,32,0.064,36,0.837,37,1.275,38,0.94,47,1.447,48,0.94,51,0.837,56,0.94,58,1.275,75,1.114,77,1.323,79,1.275,108,0.677,109,0.837,112,0.033,113,0.045,114,0.033,121,1.795,124,0.94,127,2.038,128,1.839,129,1.275,135,2.627,137,3.587,139,1.937,140,1.937,141,3.198,142,2.627,143,2.627,144,1.937,145,2.627,146,3.763,147,1.937,151,1.937,158,2.627,176,1.937,177,1.937,180,1.937,182,1.937,184,2.982,185,1.937,186,2.627,189,1.937,190,1.937,191,1.937,192,2.151,194,1.937,195,1.937,196,1.937,197,1.937,198,1.937,200,1.937,202,1.937,203,1.937,207,1.937,208,2.627,214,2.627,215,1.937,267,1.586,340,1.323,369,1.323,482,1.586,483,2.151,486,1.586,487,1.937,488,1.937,502,1.586,504,1.937,506,2.627,507,1.937,508,1.937,509,1.937,510,2.47]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["0",{"_index":244,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["0/1",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":235,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["1000",{"_index":100,"title":{},"body":{"components/Alert.html":{}}}],["12/22",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":395,"title":{},"body":{"index.html":{},"overview.html":{}}}],["200",{"_index":242,"title":{},"body":{"components/Multiselect.html":{}}}],["2018",{"_index":414,"title":{},"body":{"license.html":{}}}],["3",{"_index":48,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["3/5",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["7/13",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":445,"title":{},"body":{"license.html":{}}}],["accidentally",{"_index":320,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":470,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["add",{"_index":311,"title":{},"body":{"contributing.html":{}}}],["additional",{"_index":480,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["again",{"_index":324,"title":{},"body":{"contributing.html":{}}}],["alert",{"_index":1,"title":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{}}}],["alert.scss",{"_index":10,"title":{},"body":{"components/Alert.html":{}}}],["and/or",{"_index":436,"title":{},"body":{"license.html":{}}}],["another",{"_index":403,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":388,"title":{},"body":{"index.html":{}}}],["applications",{"_index":367,"title":{},"body":{"index.html":{}}}],["arising",{"_index":474,"title":{},"body":{"license.html":{}}}],["associated",{"_index":424,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":340,"title":{},"body":{"contributing.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["authors",{"_index":463,"title":{},"body":{"license.html":{}}}],["auto",{"_index":484,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["autoclose",{"_index":15,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["automatically",{"_index":44,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["awesome",{"_index":301,"title":{},"body":{"contributing.html":{}}}],["b",{"_index":298,"title":{},"body":{"contributing.html":{}}}],["background",{"_index":491,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["badge",{"_index":108,"title":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["badge.scss",{"_index":116,"title":{},"body":{"components/Badge.html":{}}}],["badges",{"_index":207,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["before",{"_index":322,"title":{},"body":{"contributing.html":{}}}],["beside",{"_index":306,"title":{},"body":{"contributing.html":{}}}],["black",{"_index":66,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["boolean",{"_index":37,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["border",{"_index":492,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["bottom",{"_index":499,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["branch",{"_index":295,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":325,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":302,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building",{"_index":337,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building_construction",{"_index":336,"title":{},"body":{"contributing.html":{}}}],["built",{"_index":502,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["button",{"_index":55,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["c",{"_index":413,"title":{},"body":{"license.html":{}}}],["cdn",{"_index":379,"title":{},"body":{"index.html":{}}}],["changed",{"_index":202,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["changes",{"_index":310,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":419,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":297,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":466,"title":{},"body":{"license.html":{}}}],["class",{"_index":87,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["click",{"_index":186,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["clone",{"_index":289,"title":{},"body":{"contributing.html":{}}}],["closable",{"_index":46,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["close",{"_index":43,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closeable",{"_index":16,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closed",{"_index":78,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closesecs",{"_index":17,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["closetext",{"_index":19,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["code",{"_index":398,"title":{},"body":{"index.html":{}}}],["color",{"_index":20,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["commit",{"_index":312,"title":{},"body":{"contributing.html":{}}}],["committing",{"_index":323,"title":{},"body":{"contributing.html":{}}}],["component",{"_index":0,"title":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{}}}],["component.isnur.com",{"_index":372,"title":{},"body":{"index.html":{}}}],["component.isnur.com/docs",{"_index":373,"title":{},"body":{"index.html":{}}}],["component/issues",{"_index":329,"title":{},"body":{"contributing.html":{}}}],["component_template",{"_index":105,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["componentdidload",{"_index":26,"title":{},"body":{"components/Alert.html":{}}}],["componentdidunload",{"_index":27,"title":{},"body":{"components/Alert.html":{}}}],["componentinterface",{"_index":133,"title":{},"body":{"components/Multiselect.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"contributing.html":{},"index.html":{},"overview.html":{}}}],["componentusage",{"_index":381,"title":{},"body":{"index.html":{}}}],["componentwillload",{"_index":150,"title":{},"body":{"components/Multiselect.html":{}}}],["conditions",{"_index":444,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":399,"title":{},"body":{"index.html":{}}}],["connection",{"_index":476,"title":{},"body":{"license.html":{}}}],["const",{"_index":222,"title":{},"body":{"components/Multiselect.html":{}}}],["contract",{"_index":471,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":406,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":285,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributing.md",{"_index":405,"title":{},"body":{"index.html":{}}}],["copies",{"_index":438,"title":{},"body":{"license.html":{}}}],["copy",{"_index":422,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":412,"title":{},"body":{"license.html":{}}}],["count",{"_index":214,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["countdowntimerid",{"_index":21,"title":{},"body":{"components/Alert.html":{}}}],["coverage",{"_index":343,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":293,"title":{},"body":{"contributing.html":{}}}],["css",{"_index":489,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["custom",{"_index":490,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["customevent",{"_index":488,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["customized",{"_index":54,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["damages",{"_index":467,"title":{},"body":{"license.html":{}}}],["dark",{"_index":67,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["data",{"_index":394,"title":{},"body":{"index.html":{}}}],["deal",{"_index":425,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":477,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":40,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["demo",{"_index":370,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":504,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["depends",{"_index":510,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["description",{"_index":483,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["develop",{"_index":300,"title":{},"body":{"contributing.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["disabled",{"_index":135,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["display",{"_index":121,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["dist",{"_index":333,"title":{},"body":{"contributing.html":{}}}],["distribute",{"_index":434,"title":{},"body":{"license.html":{}}}],["document",{"_index":163,"title":{},"body":{"components/Multiselect.html":{}}}],["document.getelementbyid(\"select",{"_index":393,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":344,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":331,"title":{},"body":{"contributing.html":{}}}],["each",{"_index":341,"title":{},"body":{"contributing.html":{}}}],["edit",{"_index":332,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":22,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["element",{"_index":72,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"index.html":{}}}],["element.value",{"_index":261,"title":{},"body":{"components/Multiselect.html":{}}}],["elements",{"_index":197,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["emitted",{"_index":77,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["error",{"_index":63,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["etc",{"_index":392,"title":{},"body":{"index.html":{}}}],["event",{"_index":75,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{},"license.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["eventemitter",{"_index":74,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["events",{"_index":487,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["export",{"_index":86,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["express",{"_index":454,"title":{},"body":{"license.html":{}}}],["false",{"_index":79,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["family",{"_index":495,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["feature",{"_index":294,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["files",{"_index":305,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill:#f9f,stroke:#333,stroke",{"_index":508,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["filtereditems",{"_index":228,"title":{},"body":{"components/Multiselect.html":{}}}],["first",{"_index":365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fitness",{"_index":459,"title":{},"body":{"license.html":{}}}],["following",{"_index":443,"title":{},"body":{"license.html":{}}}],["font",{"_index":494,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["fork",{"_index":288,"title":{},"body":{"contributing.html":{}}}],["forked",{"_index":290,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":355,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["format(first",{"_index":362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":282,"title":{},"body":{"components/Multiselect.html":{}}}],["free",{"_index":418,"title":{},"body":{"license.html":{}}}],["function",{"_index":192,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["functions",{"_index":360,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":441,"title":{},"body":{"license.html":{}}}],["generated",{"_index":335,"title":{},"body":{"contributing.html":{}}}],["getselected",{"_index":151,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["getting",{"_index":283,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":296,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":417,"title":{},"body":{"license.html":{}}}],["graph",{"_index":506,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["h",{"_index":84,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["handleclick",{"_index":152,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclick(event",{"_index":159,"title":{},"body":{"components/Multiselect.html":{}}}],["head",{"_index":385,"title":{},"body":{"index.html":{}}}],["height",{"_index":503,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["help",{"_index":287,"title":{},"body":{"contributing.html":{}}}],["hereby",{"_index":416,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":190,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["holders",{"_index":464,"title":{},"body":{"license.html":{}}}],["host",{"_index":83,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["html",{"_index":391,"title":{},"body":{"index.html":{}}}],["htmlelement",{"_index":71,"title":{},"body":{"components/Alert.html":{}}}],["htmlinputelement",{"_index":227,"title":{},"body":{"components/Multiselect.html":{}}}],["https://github.com/isnur/is",{"_index":327,"title":{},"body":{"contributing.html":{}}}],["https://is",{"_index":371,"title":{},"body":{"index.html":{}}}],["https://unpkg.com/is",{"_index":380,"title":{},"body":{"index.html":{}}}],["id",{"_index":130,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"index.html":{}}}],["identifier",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["ilabelto",{"_index":124,"title":{"interfaces/ILabelTo.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["implements",{"_index":132,"title":{},"body":{"components/Multiselect.html":{}}}],["implied",{"_index":455,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["included",{"_index":448,"title":{},"body":{"license.html":{}}}],["including",{"_index":428,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["index.html",{"_index":386,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["install",{"_index":375,"title":{},"body":{"index.html":{}}}],["installation",{"_index":374,"title":{},"body":{"index.html":{}}}],["interact",{"_index":177,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["interface",{"_index":123,"title":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":125,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"overview.html":{}}}],["isclickinside",{"_index":223,"title":{},"body":{"components/Multiselect.html":{}}}],["iselectitem",{"_index":129,"title":{"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["isexpanded",{"_index":136,"title":{},"body":{"components/Multiselect.html":{}}}],["isselected",{"_index":248,"title":{},"body":{"components/Multiselect.html":{}}}],["issue",{"_index":326,"title":{},"body":{"contributing.html":{}}}],["item",{"_index":249,"title":{},"body":{"components/Multiselect.html":{}}}],["item.id",{"_index":252,"title":{},"body":{"components/Multiselect.html":{}}}],["item.name",{"_index":281,"title":{},"body":{"components/Multiselect.html":{}}}],["items",{"_index":137,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["jsx",{"_index":390,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":138,"title":{},"body":{"components/Multiselect.html":{}}}],["kind",{"_index":453,"title":{},"body":{"license.html":{}}}],["label",{"_index":184,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelselected",{"_index":139,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelto",{"_index":140,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["last",{"_index":364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":500,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["liability",{"_index":468,"title":{},"body":{"license.html":{}}}],["liable",{"_index":465,"title":{},"body":{"license.html":{}}}],["license",{"_index":410,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":64,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["limit",{"_index":141,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["limitation",{"_index":429,"title":{},"body":{"license.html":{}}}],["limited",{"_index":456,"title":{},"body":{"license.html":{}}}],["limittext",{"_index":142,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["list",{"_index":180,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["listen",{"_index":213,"title":{},"body":{"components/Multiselect.html":{}}}],["listen('click",{"_index":161,"title":{},"body":{"components/Multiselect.html":{}}}],["local",{"_index":292,"title":{},"body":{"contributing.html":{}}}],["m",{"_index":313,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":81,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"contributing.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["max",{"_index":143,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["maximum",{"_index":200,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["merchantability",{"_index":458,"title":{},"body":{"license.html":{}}}],["merge",{"_index":432,"title":{},"body":{"license.html":{}}}],["message",{"_index":195,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["method",{"_index":156,"title":{},"body":{"components/Multiselect.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["middle",{"_index":363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":359,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":411,"title":{},"body":{"license.html":{}}}],["modal",{"_index":407,"title":{},"body":{"index.html":{}}}],["modify",{"_index":431,"title":{},"body":{"license.html":{}}}],["modules",{"_index":478,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":215,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["mouseevent",{"_index":160,"title":{},"body":{"components/Multiselect.html":{}}}],["multiselect",{"_index":109,"title":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["multiselect.scss",{"_index":134,"title":{},"body":{"components/Multiselect.html":{}}}],["name",{"_index":106,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["new",{"_index":299,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["newvalue",{"_index":171,"title":{},"body":{"components/Multiselect.html":{}}}],["nice",{"_index":401,"title":{},"body":{"index.html":{}}}],["no_entry_sign",{"_index":330,"title":{},"body":{"contributing.html":{}}}],["noninfringement",{"_index":462,"title":{},"body":{"license.html":{}}}],["notice",{"_index":446,"title":{},"body":{"license.html":{}}}],["npm",{"_index":303,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":68,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["number",{"_index":47,"title":{},"body":{"components/Alert.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-multiselect.html":{}}}],["obj.id",{"_index":251,"title":{},"body":{"components/Multiselect.html":{}}}],["obj['name'].tolowercase().includes(this.keyword.tolowercase",{"_index":264,"title":{},"body":{"components/Multiselect.html":{}}}],["obtaining",{"_index":421,"title":{},"body":{"license.html":{}}}],["ok",{"_index":308,"title":{},"body":{"contributing.html":{}}}],["oldvalue",{"_index":168,"title":{},"body":{"components/Multiselect.html":{}}}],["onclose",{"_index":23,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["one",{"_index":402,"title":{},"body":{"index.html":{}}}],["onfiltereditems",{"_index":258,"title":{},"body":{"components/Multiselect.html":{}}}],["onselected",{"_index":144,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["open",{"_index":366,"title":{},"body":{"index.html":{}}}],["option",{"_index":185,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["optional",{"_index":18,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":58,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["origin",{"_index":315,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":473,"title":{},"body":{"license.html":{}}}],["out",{"_index":475,"title":{},"body":{"license.html":{}}}],["outside",{"_index":238,"title":{},"body":{"components/Multiselect.html":{}}}],["overview",{"_index":479,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":498,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["page",{"_index":481,"title":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["pagination",{"_index":408,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":165,"title":{},"body":{"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":460,"title":{},"body":{"license.html":{}}}],["pass",{"_index":198,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["permission",{"_index":415,"title":{},"body":{"license.html":{}}}],["permit",{"_index":439,"title":{},"body":{"license.html":{}}}],["person",{"_index":420,"title":{},"body":{"license.html":{}}}],["persons",{"_index":440,"title":{},"body":{"license.html":{}}}],["pick",{"_index":203,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder",{"_index":145,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder={this.placeholder",{"_index":270,"title":{},"body":{"components/Multiselect.html":{}}}],["portions",{"_index":450,"title":{},"body":{"license.html":{}}}],["primary",{"_index":59,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["private",{"_index":88,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["process",{"_index":194,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["project",{"_index":338,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":158,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise.resolve(this.selected",{"_index":216,"title":{},"body":{"components/Multiselect.html":{}}}],["prop",{"_index":41,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["properties",{"_index":14,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["property",{"_index":482,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["props,function",{"_index":339,"title":{},"body":{"contributing.html":{}}}],["provided",{"_index":451,"title":{},"body":{"license.html":{}}}],["publish",{"_index":433,"title":{},"body":{"license.html":{}}}],["pull",{"_index":317,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":461,"title":{},"body":{"license.html":{}}}],["push",{"_index":314,"title":{},"body":{"contributing.html":{}}}],["put",{"_index":383,"title":{},"body":{"index.html":{}}}],["radius",{"_index":493,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["raising_hand",{"_index":286,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":397,"title":{},"body":{"index.html":{}}}],["ref={el",{"_index":269,"title":{},"body":{"components/Multiselect.html":{}}}],["remember",{"_index":400,"title":{},"body":{"index.html":{}}}],["remove",{"_index":127,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["remove={this.isselected(item",{"_index":277,"title":{},"body":{"components/Multiselect.html":{}}}],["render",{"_index":28,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["renderclosetext",{"_index":91,"title":{},"body":{"components/Alert.html":{}}}],["renderselecteditems",{"_index":229,"title":{},"body":{"components/Multiselect.html":{}}}],["repo",{"_index":291,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":318,"title":{},"body":{"contributing.html":{}}}],["rest",{"_index":189,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["restriction",{"_index":427,"title":{},"body":{"license.html":{}}}],["result",{"_index":112,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["results",{"_index":114,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["return",{"_index":93,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["returns",{"_index":31,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-multiselect.html":{}}}],["right",{"_index":501,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["rights",{"_index":430,"title":{},"body":{"license.html":{}}}],["rounded",{"_index":24,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["run",{"_index":304,"title":{},"body":{"contributing.html":{}}}],["saveyou",{"_index":377,"title":{},"body":{"index.html":{}}}],["scoped",{"_index":11,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["script",{"_index":382,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":60,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["seconds",{"_index":50,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["secs",{"_index":485,"title":{},"body":{"additional-documentation/is-alert.html":{}}}],["see",{"_index":404,"title":{},"body":{"index.html":{}}}],["select",{"_index":128,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["select.items",{"_index":396,"title":{},"body":{"index.html":{}}}],["select={!this.isselected(item",{"_index":279,"title":{},"body":{"components/Multiselect.html":{}}}],["selected",{"_index":146,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selected={this.isselected(item",{"_index":275,"title":{},"body":{"components/Multiselect.html":{}}}],["selected[this.limit",{"_index":234,"title":{},"body":{"components/Multiselect.html":{}}}],["selector",{"_index":107,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["sell",{"_index":437,"title":{},"body":{"license.html":{}}}],["setitems",{"_index":153,"title":{},"body":{"components/Multiselect.html":{}}}],["setitems(newvalue",{"_index":167,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected",{"_index":154,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected(newvalue",{"_index":172,"title":{},"body":{"components/Multiselect.html":{}}}],["settimeout",{"_index":240,"title":{},"body":{"components/Multiselect.html":{}}}],["shall",{"_index":447,"title":{},"body":{"license.html":{}}}],["show",{"_index":208,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["shown",{"_index":196,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["showselectedbadge",{"_index":147,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["similar",{"_index":384,"title":{},"body":{"index.html":{}}}],["size",{"_index":496,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["software",{"_index":423,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{}}}],["src/.../utils.ts",{"_index":361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components",{"_index":342,"title":{},"body":{"contributing.html":{}}}],["src/components/alert/alert.tsx",{"_index":6,"title":{},"body":{"components/Alert.html":{},"coverage.html":{}}}],["src/components/alert/alert.tsx:12",{"_index":57,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:17",{"_index":42,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:22",{"_index":49,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:27",{"_index":45,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:32",{"_index":53,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:37",{"_index":80,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:39",{"_index":70,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:41",{"_index":73,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:51",{"_index":76,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:60",{"_index":30,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:68",{"_index":34,"title":{},"body":{"components/Alert.html":{}}}],["src/components/alert/alert.tsx:74",{"_index":35,"title":{},"body":{"components/Alert.html":{}}}],["src/components/badge/badge.tsx",{"_index":115,"title":{},"body":{"components/Badge.html":{},"coverage.html":{}}}],["src/components/badge/badge.tsx:12",{"_index":118,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:17",{"_index":120,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:22",{"_index":119,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:24",{"_index":117,"title":{},"body":{"components/Badge.html":{}}}],["src/components/multiselect/multiselect.interface.tsx",{"_index":126,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx",{"_index":131,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx:104",{"_index":174,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:111",{"_index":164,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:204",{"_index":155,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:214",{"_index":166,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:25",{"_index":175,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:30",{"_index":204,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:35",{"_index":179,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:40",{"_index":205,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:45",{"_index":187,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:53",{"_index":188,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:58",{"_index":193,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:63",{"_index":183,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:68",{"_index":206,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:73",{"_index":199,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:75",{"_index":178,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:76",{"_index":181,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:77",{"_index":211,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:78",{"_index":209,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:84",{"_index":157,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:91",{"_index":201,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:94",{"_index":170,"title":{},"body":{"components/Multiselect.html":{}}}],["src/utils/utils.ts",{"_index":354,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stage",{"_index":309,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":321,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":284,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":69,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["statements",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["stencil/core",{"_index":85,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["stenciljs",{"_index":369,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["string",{"_index":51,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["style",{"_index":267,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["styleurl",{"_index":9,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["subject",{"_index":442,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":435,"title":{},"body":{"license.html":{}}}],["submit",{"_index":316,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":449,"title":{},"body":{"license.html":{}}}],["success",{"_index":61,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["table",{"_index":358,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":409,"title":{},"body":{"index.html":{}}}],["tag",{"_index":8,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["tags",{"_index":148,"title":{},"body":{"components/Multiselect.html":{}}}],["target",{"_index":162,"title":{},"body":{"components/Multiselect.html":{}}}],["td",{"_index":507,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["template",{"_index":389,"title":{},"body":{"index.html":{}}}],["text",{"_index":56,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["textinput",{"_index":226,"title":{},"body":{"components/Multiselect.html":{}}}],["textselected",{"_index":149,"title":{},"body":{"components/Multiselect.html":{}}}],["this.autoclose",{"_index":101,"title":{},"body":{"components/Alert.html":{}}}],["this.close",{"_index":98,"title":{},"body":{"components/Alert.html":{}}}],["this.close()}>{this.closetext",{"_index":94,"title":{},"body":{"components/Alert.html":{}}}],["this.closeable",{"_index":92,"title":{},"body":{"components/Alert.html":{}}}],["this.closesecs",{"_index":99,"title":{},"body":{"components/Alert.html":{}}}],["this.countdowntimerid",{"_index":96,"title":{},"body":{"components/Alert.html":{}}}],["this.el.attributes['auto",{"_index":95,"title":{},"body":{"components/Alert.html":{}}}],["this.el.remove",{"_index":90,"title":{},"body":{"components/Alert.html":{}}}],["this.filtereditems",{"_index":262,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.length",{"_index":272,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.map((item",{"_index":273,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isexpanded",{"_index":239,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isselected(item",{"_index":254,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items",{"_index":217,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items.filter(obj",{"_index":263,"title":{},"body":{"components/Multiselect.html":{}}}],["this.keyword",{"_index":260,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelselected",{"_index":276,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.remove",{"_index":278,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.select",{"_index":280,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limit",{"_index":233,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limittext(count",{"_index":236,"title":{},"body":{"components/Multiselect.html":{}}}],["this.max",{"_index":256,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect",{"_index":265,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect.contains(event.target",{"_index":224,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onclose.emit(true",{"_index":89,"title":{},"body":{"components/Alert.html":{}}}],["this.onfiltereditems",{"_index":220,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onselected.emit(this.selected",{"_index":257,"title":{},"body":{"components/Multiselect.html":{}}}],["this.placeholder",{"_index":210,"title":{},"body":{"components/Multiselect.html":{}}}],["this.renderclosetext",{"_index":103,"title":{},"body":{"components/Alert.html":{}}}],["this.renderselecteditems",{"_index":247,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected",{"_index":219,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.filter(obj",{"_index":255,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.length",{"_index":232,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.map((item",{"_index":230,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.some(obj",{"_index":250,"title":{},"body":{"components/Multiselect.html":{}}}],["this.showselectedbadge",{"_index":245,"title":{},"body":{"components/Multiselect.html":{}}}],["this.tags",{"_index":246,"title":{},"body":{"components/Multiselect.html":{}}}],["this.text",{"_index":122,"title":{},"body":{"components/Badge.html":{}}}],["this.textinput",{"_index":259,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textinput.focus",{"_index":241,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textselected",{"_index":218,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(!this.isexpanded)}>&nbsp",{"_index":271,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(false",{"_index":225,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(true",{"_index":266,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item",{"_index":274,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item)}>x",{"_index":231,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateplaceholder",{"_index":221,"title":{},"body":{"components/Multiselect.html":{}}}],["tip",{"_index":319,"title":{},"body":{"contributing.html":{}}}],["toggle",{"_index":237,"title":{},"body":{"components/Multiselect.html":{}}}],["top",{"_index":368,"title":{},"body":{"index.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["tort",{"_index":472,"title":{},"body":{"license.html":{}}}],["true",{"_index":12,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["u2713",{"_index":182,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["ud83d\\uddd9",{"_index":52,"title":{},"body":{"components/Alert.html":{},"additional-documentation/is-alert.html":{}}}],["undefined",{"_index":486,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["unpkg",{"_index":378,"title":{},"body":{"index.html":{}}}],["updateitems",{"_index":253,"title":{},"body":{"components/Multiselect.html":{}}}],["updateplaceholder",{"_index":243,"title":{},"body":{"components/Multiselect.html":{}}}],["use",{"_index":387,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":505,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["user",{"_index":176,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["using",{"_index":376,"title":{},"body":{"index.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{}}}],["var",{"_index":104,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["void",{"_index":33,"title":{},"body":{"components/Alert.html":{},"components/Multiselect.html":{}}}],["warning",{"_index":62,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["warranties",{"_index":457,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":452,"title":{},"body":{"license.html":{}}}],["watch",{"_index":212,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('items",{"_index":169,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('selected",{"_index":173,"title":{},"body":{"components/Multiselect.html":{}}}],["web",{"_index":328,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["weight",{"_index":497,"title":{},"body":{"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["whether",{"_index":469,"title":{},"body":{"license.html":{}}}],["white",{"_index":65,"title":{},"body":{"components/Alert.html":{},"components/Badge.html":{},"additional-documentation/is-alert.html":{},"additional-documentation/is-badge.html":{}}}],["width:4px",{"_index":509,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["window.clearinterval(this.countdowntimerid",{"_index":102,"title":{},"body":{"components/Alert.html":{}}}],["window.settimeout",{"_index":97,"title":{},"body":{"components/Alert.html":{}}}],["within",{"_index":191,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["without",{"_index":426,"title":{},"body":{"license.html":{}}}],["www",{"_index":334,"title":{},"body":{"contributing.html":{}}}],["yours",{"_index":307,"title":{},"body":{"contributing.html":{}}}],["zindex",{"_index":268,"title":{},"body":{"components/Multiselect.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Alert.html":{"url":"components/Alert.html","title":"component - Alert","body":"\n                   \n\n\n\n\n\n  Components\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/alert/alert.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-alert\n            \n\n            \n                styleUrl\n                alert.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoClose\n                            \n                            \n                                closeable\n                            \n                            \n                                closeSecs\n                            \n                            \n                                    Optional\n                                closeText\n                            \n                            \n                                    Optional\n                                color\n                            \n                            \n                                countDownTimerId\n                            \n                            \n                                el\n                            \n                            \n                                onClose\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentDidLoad\n                            \n                            \n                                componentDidUnload\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentDidUnload\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentDidUnload()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/alert/alert.tsx:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:17\n                            \n                        \n\n                \n                    \n                        If true alert will close automatically.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:27\n                            \n                        \n\n                \n                    \n                        If closable or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeSecs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:22\n                            \n                        \n\n                \n                    \n                        Number of seconds to close alert automatically if autoClose true.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            closeText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\uD83D\\uDDD9'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:32\n                            \n                        \n\n                \n                    \n                        Customized close button text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countDownTimerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Element()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:51\n                            \n                        \n\n                \n                    \n                        Emitted when the alert is closed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/alert/alert.tsx:37\n                            \n                        \n\n                \n                    \n                        If true, make the alert rounded.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, State, Event, EventEmitter, Element, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-alert',\n  styleUrl: 'alert.scss',\n  scoped: true\n})\nexport class Alert {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * If `true` alert will close automatically.\n   */\n  @Prop() autoClose: boolean = true;\n\n  /**\n   * Number of seconds to close alert automatically if autoClose `true`.\n   */\n  @Prop() closeSecs: number = 3;\n\n  /**\n   * If closable or not.\n   */\n  @Prop() closeable: boolean = true;\n\n  /**\n   * Customized close button text.\n   */\n  @Prop() closeText?: string = '\\uD83D\\uDDD9';\n\n  /**\n   * If `true`, make the alert rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  @State() countDownTimerId = null;\n\n  @Element() el: HTMLElement;\n\n  private close = () => {\n    this.onClose.emit(true);\n    this.el.remove()\n  }\n\n  /**\n   * Emitted when the alert is closed.\n   */\n  @Event() onClose: EventEmitter;\n\n  private renderCloseText = () => {\n    if (this.closeable) {\n      return  this.close()}>{this.closeText}\n    }\n    return null;\n  };\n\n  componentDidLoad() {\n    if (this.el.attributes['auto-close']) {\n      this.countDownTimerId = window.setTimeout(() => {\n        this.close()\n      }, this.closeSecs * 1000)\n    }\n  }\n\n  componentDidUnload() {\n    if (this.autoClose) {\n      window.clearInterval(this.countDownTimerId);\n    }\n  }\n\n  render() {\n    return (\n      \n        \n          \n        \n        {this.renderCloseText()}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Alert'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Badge.html":{"url":"components/Badge.html","title":"component - Badge","body":"\n                   \n\n\n\n\n\n  Components\n  Badge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/badge/badge.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-badge\n            \n\n            \n                styleUrl\n                badge.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/badge/badge.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:22\n                            \n                        \n\n                \n                    \n                        If true, make the badge rounded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:17\n                            \n                        \n\n                \n                    \n                        The text to display in the badge.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-badge',\n  styleUrl: 'badge.scss',\n  scoped: true\n})\nexport class Badge {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * The text to display in the badge.\n   */\n  @Prop() text: string;\n\n  /**\n   * If `true`, make the badge rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  render() {\n    return (\n      \n        {this.text}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Badge'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelTo.html":{"url":"interfaces/ILabelTo.html","title":"interface - ILabelTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabelTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        remove\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectItem.html":{"url":"interfaces/ISelectItem.html","title":"interface - ISelectItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISelectItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Multiselect.html":{"url":"components/Multiselect.html","title":"component - Multiselect","body":"\n                   \n\n\n\n\n\n  Components\n  Multiselect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/multiselect/multiselect.tsx\n\n\n\n\n    \n        Implements\n    \n    \n                ComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-multiselect\n            \n\n            \n                styleUrl\n                multiselect.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isExpanded\n                            \n                            \n                                items\n                            \n                            \n                                keyword\n                            \n                            \n                                labelSelected\n                            \n                            \n                                labelTo\n                            \n                            \n                                limit\n                            \n                            \n                                limitText\n                            \n                            \n                                max\n                            \n                            \n                                onSelected\n                            \n                            \n                                placeholder\n                            \n                            \n                                selected\n                            \n                            \n                                showSelectedBadge\n                            \n                            \n                                tags\n                            \n                            \n                                textSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                getSelected\n                            \n                            \n                                handleClick\n                            \n                            \n                                render\n                            \n                            \n                                setItems\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentWillLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentWillLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelected\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Method()\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:84\n                \n            \n\n\n            \n                \n                    Get the selected items.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Listen('click', {target: 'document'})\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('items')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelected(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('selected')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:25\n                            \n                        \n\n                \n                    \n                        If true, the user cannot interact with the select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:35\n                            \n                        \n\n                \n                    \n                        The options list items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2713'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:63\n                            \n                        \n\n                \n                    \n                        The label when option is selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILabelTo\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:45\n                            \n                        \n\n                \n                    \n                        The label to remove or select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:53\n                            \n                        \n\n                \n                    \n                        Limit the display of selected options. The rest will be hidden within the limitText string.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:58\n                            \n                        \n\n                \n                    \n                        Function that process the message shown when selected elements pass the defined limit.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:73\n                            \n                        \n\n                \n                    \n                        Maximum selected items can be selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:91\n                            \n                        \n\n                \n                    \n                        Emitted when the selected items has changed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Pick some\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:30\n                            \n                        \n\n                \n                    \n                        The text to display when not selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:40\n                            \n                        \n\n                \n                    \n                        The selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectedBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:68\n                            \n                        \n\n                \n                    \n                        If true, The badges will show selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.placeholder\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  Host,\n  Prop,\n  State,\n  Method,\n  Watch,\n  Listen,\n  Event,\n  EventEmitter,\n  h\n} from '@stencil/core';\n\n@Component({\n  tag: 'is-multiselect',\n  styleUrl: 'multiselect.scss',\n  scoped: true\n})\nexport class Multiselect implements ComponentInterface {\n\n  /**\n   * If `true`, the user cannot interact with the select.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The text to display when not selected items.\n   */\n  @Prop() placeholder: string = \"Pick some\";\n\n  /**\n   * The options list items.\n   */\n  @Prop() items: ISelectItem[] = [];\n\n  /**\n   * The selected items.\n   */\n  @Prop() selected: ISelectItem[] = [];\n\n  /**\n   * The label to remove or select.\n   */\n  @Prop() labelTo: ILabelTo = {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  };\n\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   */\n  @Prop() limit: number = 3;\n\n  /**\n   * Function that process the message shown when selected elements pass the defined limit.\n   */\n  @Prop() limitText: Function = (count: number) => 'and ' + count + ' more';\n\n  /**\n   * The label when option is selected.\n   */\n  @Prop() labelSelected: string = '\\u2713';\n\n  /**\n   * If `true`, The badges will show selected items.\n   */\n  @Prop() showSelectedBadge: boolean = false;\n\n  /**\n   * Maximum selected items can be selected.\n   */\n  @Prop() max: number;\n\n  @State() isExpanded: boolean = false;\n  @State() keyword: string = '';\n  @State() textSelected: string = this.placeholder;\n  @State() tags = null;\n\n  /**\n   * Get the selected items.\n   */\n  @Method()\n  getSelected(): Promise {\n    return Promise.resolve(this.selected);\n  }\n\n  /**\n   * Emitted when the selected items has changed.\n   */\n  @Event() onSelected: EventEmitter;\n\n  @Watch('items')\n  setItems(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.items = newValue;\n      this.textSelected = this.placeholder;\n      this.selected = [];\n      this.onFilteredItems();\n    }\n  }\n\n  @Watch('selected')\n  setSelected(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.updatePlaceholder();\n    }\n  }\n\n  @Listen('click', {target: 'document'})\n  handleClick(event: MouseEvent) {\n    const isClickInside = this.multiselect.contains(event.target);\n\n    if (!isClickInside) {\n      this.toggle(false, true);\n    }\n  }\n\n  private textInput?: HTMLInputElement;\n  private multiselect?: any;\n  private filteredItems: ISelectItem[] = this.items;\n\n  private renderSelectedItems = () => {\n    let selected = [];\n    if (this.selected) {\n      this.selected.map((item, i) => {\n        if (i \n              \n               this.updateItems(item)}>x\n            \n          );\n        } else {\n          const count = this.selected.length - this.limit;\n          selected[this.limit + 1] = {this.limitText(count)}\n        }\n      });\n    }\n    return selected;\n  };\n\n  private toggle = (state: boolean, outside?: boolean) => {\n    this.isExpanded = state;\n    this.updatePlaceholder();\n    if (!outside) {\n      if (this.isExpanded) {\n        setTimeout(() => {\n          this.textInput.focus();\n        }, 200);\n      }\n    }\n  };\n\n  private updatePlaceholder() {\n    this.textSelected = this.placeholder;\n    if (this.selected && this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n    if (this.isExpanded) {\n      this.textSelected = '';\n    }\n  }\n\n  private isSelected = (item: ISelectItem) => {\n    if (this.selected) {\n      return this.selected.some(obj => obj.id === item.id)\n    }\n    return false;\n  };\n\n  private updateItems = (item: ISelectItem) => {\n    if (this.isSelected(item)) {\n      this.selected = this.selected.filter(obj => {\n        return obj.id !== item.id;\n      });\n    } else {\n      if (this.selected.length !== this.max) {\n        if (this.selected && this.selected.length > 0) {\n          this.selected = [...this.selected, item];\n        } else {\n          this.selected = [item];\n        }\n      }\n    }\n    this.onSelected.emit(this.selected);\n  };\n\n  private onFilteredItems = () => {\n    const element = this.textInput;\n    if (element) {\n      this.keyword = element.value;\n      this.filteredItems = this.items.filter(obj => {\n        return obj['name'].toLowerCase().includes(this.keyword.toLowerCase());\n      });\n    } else {\n      this.filteredItems = this.items;\n    }\n  };\n\n  componentWillLoad() {\n    this.textSelected = this.placeholder;\n    if (this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n  }\n\n  render() {\n    return (\n       this.multiselect = el}>\n        \n\n           this.toggle(true)} style={{\n            zIndex: this.isExpanded ? '-1' : '0'\n          }}>\n          \n\n          \n            {this.showSelectedBadge && this.selected && this.selected.length > 0 ? this.tags : this.textSelected}\n          \n\n          {this.isExpanded &&\n          \n               this.onFilteredItems()}\n                  ref={el => this.textInput = el}\n                  placeholder={this.placeholder}\n              />\n          \n          }\n           this.toggle(!this.isExpanded)}>&nbsp;\n        \n        {\n          this.isExpanded &&\n          \n              \n                {\n                  this.filteredItems.length > 0 ? this.filteredItems.map((item: ISelectItem, i) => {\n                    return (\n                       this.updateItems(item)}\n                          label-selected={this.isSelected(item) ? this.labelSelected : null}\n                          label-to-remove={this.isSelected(item) ? this.labelTo.remove : null}\n                          label-to-select={!this.isSelected(item) ? this.labelTo.select : null}\n                      >{item.name}\n                    )\n                  }) : Not found\n                }\n              \n          \n        }\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Alert', 'selector': ''},{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Multiselect'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\n:raising_hand:   How to help:\n\nFork it!\nClone your forked repo to your local\nCreate your feature branch: git checkout -b my-new-feature\nDevelop your new awesome feature\nBuild it npm run build (it will make a new files beside yours but its ok)\nStage your changes: git add .\nCommit your changes: git commit -m 'Add some feature'\nPush to the branch: git push origin my-new-feature\nSubmit a pull request!\n\nTip: \n\nif you accidentally run npm start before committing your changes, run npm run build again then commit.\nYou can browse any issue you can help at\nhttps://github.com/isnur/is-web-component/issues\n\n:no_entry_sign:   Don't edit the files in dist/, www/ - they are generated:\nWhat you can do\n:building_construction:   Building the project\n\nyou can add some new awesome components\nyou can edit or add some props,function and attribute for each components in src/components/\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/alert/alert.tsx\n            \n            component\n            Alert\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/components/badge/badge.tsx\n            \n            component\n            Badge\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ILabelTo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ISelectItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.tsx\n            \n            component\n            Multiselect\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            function\n            format\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            format   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(first, middle, last)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    middle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIs-Web-Component\n  \n    \nOpen source web components for building web applications. Build on top StencilJS.\nDemo\nhttps://is-web-component.isnur.com/\nDocumentation\nhttps://is-web-component.isnur.com/docs/\nInstallation\nYou can install using NPM:\nnpm i is-web-component --saveYou can install using unpkg cdn:\nhttps://unpkg.com/is-web-componentUsage\nScript tag\n\nPut a script tag similar to this\n  in the head of your index.html\n\nThen you can use the element anywhere in your template, JSX, html etc.\n  is-badge\n  \n\n  is-multiselect\n  \n\n  \n    var select = document.getElementById(\"select\");\n    var data = [{\n      id: 1,\n      name: 'Data 1'\n    }, {\n      id: 2,\n      name: 'Data 2'\n    }, {\n      id: 3,\n      name: 'Data 3'\n    }];\n    select.items = data;\n  \n\nContributing\n\nRead the project Code of Conduct and remember to be nice to one another.\nSee CONTRIBUTING.md for info about how to contribute to this project.\n\nComponents\n\n is-alert\n is-badge\n is-modal\n is-multiselect\n is-pagination\n is-table\n is-tabs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-alert.html":{"url":"additional-documentation/is-alert.html","title":"additional-page - is-alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-alert\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\nautoClose\nauto-close\nIf true alert will close automatically.\nboolean\ntrue\n\n\ncloseSecs\nclose-secs\nNumber of seconds to close alert automatically if autoClose true.\nnumber\n3\n\n\ncloseText\nclose-text\nCustomized close button text.\nstring\n'\\uD83D\\uDDD9'\n\n\ncloseable\ncloseable\nIf closable or not.\nboolean\ntrue\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the alert rounded.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nonClose\nEmitted when the alert is closed.\nCustomEvent\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the alert\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the alert\n\n\n--font-family\nFont family of the alert text\n\n\n--font-size\nFont size of the alert text\n\n\n--font-weight\nFont weight of the alert text\n\n\n--padding-bottom\nPadding bottom of the alert\n\n\n--padding-left\nPadding left of the alert\n\n\n--padding-right\nPadding right of the alert\n\n\n--padding-top\nPadding top of the alert\n\n\n\n\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-badge.html":{"url":"additional-documentation/is-badge.html","title":"additional-page - is-badge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-badge\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the badge rounded.\nboolean\nfalse\n\n\ntext\ntext\nThe text to display in the badge.\nstring\nundefined\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the badge\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the badge\n\n\n--font-family\nFont family of the badge text\n\n\n--font-size\nFont size of the badge text\n\n\n--font-weight\nFont weight of the badge text\n\n\n--height\nHeight of the badge\n\n\n--padding-bottom\nPadding bottom of the badge\n\n\n--padding-left\nPadding left of the badge\n\n\n--padding-right\nPadding right of the badge\n\n\n--padding-top\nPadding top of the badge\n\n\n\nDependencies\nUsed by\n\nis-multiselect\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-badge fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-multiselect.html":{"url":"additional-documentation/is-multiselect.html","title":"additional-page - is-multiselect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-multiselect\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ndisabled\ndisabled\nIf true, the user cannot interact with the select.\nboolean\nfalse\n\n\nitems\n--\nThe options list items.\nISelectItem[]\n[]\n\n\nlabelSelected\nlabel-selected\nThe label when option is selected.\nstring\n'\\u2713'\n\n\nlabelTo\n--\nThe label to remove or select.\nILabelTo\n{     remove: 'Click to Remove',     select: 'Click to Select'   }\n\n\nlimit\nlimit\nLimit the display of selected options. The rest will be hidden within the limitText string.\nnumber\n3\n\n\nlimitText\n--\nFunction that process the message shown when selected elements pass the defined limit.\nFunction\n(count: number) => 'and ' + count + ' more'\n\n\nmax\nmax\nMaximum selected items can be selected.\nnumber\nundefined\n\n\nplaceholder\nplaceholder\nThe text to display when not selected items.\nstring\n\"Pick some\"\n\n\nselected\n--\nThe selected items.\nISelectItem[]\n[]\n\n\nshowSelectedBadge\nshow-selected-badge\nIf true, The badges will show selected items.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nonSelected\nEmitted when the selected items has changed.\nCustomEvent\n\n\n\nMethods\ngetSelected() => Promise\nGet the selected items.\nReturns\nType: Promise\nDependencies\nDepends on\n\nis-badge\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-multiselect fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
