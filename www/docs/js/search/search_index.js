var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/components/Badge.html",[0,0.831,1,0.54]],["body/components/Badge.html",[0,0.994,1,0.963,2,1.21,3,1.152,4,0.858,5,0.858,6,1.582,7,1.582,8,1.796,9,2.232,10,2.894,11,2.232,12,1.851,13,0.704,14,0.994,15,2.261,16,2.963,17,2.963,18,1.952,19,1.796,20,2.809,21,2.261,22,2.051,23,1.042,24,0.077,25,0.937,26,1.018,27,2.586,28,3.16,29,2.051,30,1.47,31,2.232,32,2.232,33,2.232,34,2.232,35,2.232,36,2.232,37,2.232,38,2.232,39,2.232,40,1.47,41,1.042,42,1.582,43,1.47,44,2.051,45,1.796,46,2.051,47,1.47,48,1.582,49,1.582,50,1.582,51,1.582,52,1.582,53,1.582,54,1.582,55,2.051,56,2.261,57,1.582,58,0.937,59,2.232,60,0.458,61,1.582,62,1.582,63,0.033,64,0.047,65,0.033]],["title/interfaces/ILabelTo.html",[66,1.012,67,0.831]],["body/interfaces/ILabelTo.html",[3,1.07,4,1.303,5,1.303,13,1.07,14,1.31,24,0.075,25,1.066,26,1.269,58,0.871,63,0.051,64,0.062,65,0.051,66,1.595,67,1.31,68,1.934,69,1.934,70,2.182,71,1.796,72,1.07,73,1.934,74,1.583]],["title/interfaces/ISelectItem.html",[66,1.012,72,0.831]],["body/interfaces/ISelectItem.html",[3,1.07,4,1.303,5,1.303,13,1.07,14,1.31,24,0.075,25,1.066,26,1.231,58,1.2,63,0.051,64,0.062,65,0.051,66,1.595,67,1.07,68,1.934,69,1.934,70,1.583,71,1.303,72,1.31,73,2.665,74,2.094]],["title/components/Multiselect.html",[0,0.831,60,0.54]],["body/components/Multiselect.html",[0,0.408,1,0.151,2,0.497,3,0.232,4,0.283,5,0.283,7,0.522,8,0.738,9,0.917,11,0.917,12,1.317,13,0.232,14,0.408,15,0.987,18,0.604,19,0.738,20,1.477,21,2.397,23,1.221,24,0.078,25,1.003,26,0.844,27,2.85,28,2.919,30,1.221,40,1.221,41,1.685,42,2.557,43,1.317,47,0.973,48,0.522,49,0.522,50,0.522,51,0.522,52,0.522,53,0.522,54,2.125,56,1.188,57,0.522,58,0.672,59,0.917,60,0.579,61,0.522,62,0.522,63,0.011,64,0.019,65,0.011,67,0.408,70,1.221,71,1.153,72,1.285,74,1.108,75,0.522,76,1.189,77,1.591,78,1.189,79,1.227,80,1.591,81,2.769,82,1.591,83,1.227,84,1.227,85,2,86,1.682,87,1.227,88,1.227,89,1.227,90,3.076,91,1.227,92,1.591,93,1.591,94,1.914,95,1.477,96,1.189,97,1.189,98,1.189,99,0.676,100,1.914,101,1.591,102,0.676,103,0.917,104,1.189,105,1.591,106,1.189,107,1.189,108,1.189,109,0.676,110,1.227,111,1.188,112,0.676,113,1.189,114,2.755,115,1.189,116,0.676,117,2.181,118,1.189,119,1.189,120,0.676,121,0.676,122,0.917,123,0.917,124,3.13,125,0.676,126,0.676,127,0.917,128,0.676,129,0.917,130,0.676,131,2,132,0.917,133,1.477,134,0.676,135,0.738,136,0.676,137,0.917,138,0.917,139,0.917,140,1.188,141,0.676,142,0.917,143,0.917,144,0.917,145,0.917,146,0.917,147,0.676,148,0.917,149,1.591,150,0.676,151,0.917,152,0.917,153,0.917,154,0.676,155,0.676,156,0.676,157,0.917,158,0.917,159,2.403,160,0.676,161,2.181,162,0.676,163,0.676,164,0.676,165,1.227,166,0.522,167,0.676,168,1.591,169,2.593,170,3.021,171,1.189,172,1.189,173,1.591,174,1.189,175,0.676,176,0.676,177,2.897,178,0.676,179,0.676,180,0.676,181,0.676,182,0.676,183,0.676,184,2.755,185,0.676,186,0.676,187,0.917,188,0.676,189,0.676,190,1.189,191,2.755,192,0.676,193,0.676,194,0.676,195,0.676,196,1.854,197,1.591,198,1.591,199,1.189,200,0.676,201,1.914,202,0.676,203,1.189,204,1.189,205,0.676,206,0.676,207,0.676,208,0.676,209,0.676,210,0.676,211,0.917,212,1.189,213,0.676,214,0.676,215,1.189,216,0.676,217,0.676,218,0.676,219,1.189,220,0.676,221,0.42,222,0.676,223,0.676,224,0.676,225,0.676,226,0.676,227,0.676,228,0.676,229,0.676,230,0.676,231,0.676,232,0.676,233,0.676,234,0.676,235,0.676,236,0.676]],["title/contributing.html",[237,1.272,238,1.272,239,1.272]],["body/contributing.html",[2,1.413,24,0.061,45,1.597,63,0.042,64,0.055,65,0.042,239,1.597,240,2.573,241,3.378,242,2.573,243,2.573,244,2.573,245,2.573,246,2.573,247,2.573,248,4.158,249,3.378,250,4.003,251,2.573,252,2.573,253,3.207,254,2.573,255,3.378,256,2.908,257,2.908,258,4.003,259,2.605,260,2.573,261,2.573,262,2.573,263,2.573,264,3.771,265,4.003,266,3.771,267,2.573,268,3.378,269,2.573,270,2.573,271,2.573,272,2.573,273,2.573,274,2.573,275,2.573,276,2.573,277,2.573,278,2.573,279,2.573,280,2.573,281,2.573,282,1.985,283,2.573,284,2.573,285,2.573,286,3.378,287,2.573,288,2.573,289,2.573,290,2.573,291,1.985,292,1.985,293,2.573,294,1.597,295,2.573,296,2.573]],["title/coverage.html",[297,2.501]],["body/coverage.html",[0,1.31,1,0.696,5,1.303,6,2.403,24,0.074,25,0.871,60,0.696,63,0.051,64,0.062,65,0.051,66,1.595,67,1.07,69,2.367,72,1.07,75,2.403,140,1.934,196,3.179,253,2.403,297,2.403,298,1.934,299,3.116,300,3.116,301,3.116,302,3.116,303,3.814,304,3.116,305,3.116,306,2.403,307,2.403,308,3.116,309,3.116,310,2.403]],["title/miscellaneous/functions.html",[311,1.581,312,2.232]],["body/miscellaneous/functions.html",[13,1.156,15,2.089,23,1.71,24,0.072,26,0.94,58,0.94,63,0.055,64,0.065,65,0.055,110,2.596,306,2.596,307,3.081,311,2.596,312,2.596,313,3.365,314,3.365,315,3.995,316,3.995,317,3.365]],["title/index.html",[13,0.704,237,1.272,238,1.272]],["body/index.html",[0,1.132,1,0.736,2,1.378,3,0.851,4,1.036,8,2.044,24,0.073,56,2.044,58,1.034,60,0.736,63,0.04,64,0.054,65,0.04,71,1.036,73,2.297,135,2.044,187,2.541,211,1.911,239,1.538,256,1.911,257,2.541,282,3.323,291,1.911,292,2.541,298,1.538,310,1.911,318,2.477,319,2.477,320,1.911,321,1.538,322,2.477,323,3.294,324,2.477,325,2.477,326,2.477,327,3.294,328,3.294,329,2.477,330,2.477,331,2.477,332,2.477,333,2.477,334,3.294,335,2.477,336,2.477,337,2.477,338,2.477,339,1.911,340,2.477,341,2.477,342,2.477,343,2.477,344,2.477,345,2.477,346,4.106,347,2.541,348,2.477,349,2.477,350,2.477,351,2.477,352,2.477,353,2.477,354,2.477,355,2.477,356,2.477,357,2.477,358,2.477,359,2.477,360,2.477,361,2.477,362,2.477]],["title/license.html",[237,1.272,238,1.272,363,1.581]],["body/license.html",[24,0.055,63,0.042,64,0.055,65,0.042,111,1.607,259,1.998,298,1.607,339,2.616,363,1.998,364,2.59,365,3.783,366,2.59,367,2.59,368,3.392,369,2.59,370,2.59,371,2.59,372,2.59,373,2.59,374,2.59,375,3.392,376,4.468,377,2.59,378,2.59,379,3.783,380,2.59,381,3.392,382,2.59,383,2.59,384,2.59,385,2.59,386,2.59,387,2.59,388,2.59,389,2.59,390,2.59,391,3.392,392,2.59,393,2.59,394,2.59,395,2.59,396,2.59,397,2.59,398,2.59,399,3.392,400,3.392,401,2.59,402,2.59,403,2.59,404,2.59,405,2.59,406,2.59,407,2.59,408,2.59,409,2.59,410,2.59,411,2.59,412,2.59,413,2.59,414,2.59,415,2.59,416,2.59,417,2.59,418,2.59,419,2.59,420,2.59,421,2.59,422,2.59,423,2.59,424,2.59,425,2.59,426,2.59,427,2.59,428,2.59,429,2.59,430,2.59]],["title/modules.html",[431,2.501]],["body/modules.html",[24,0.068,63,0.06,64,0.068,65,0.06,431,2.822]],["title/overview.html",[432,2.501]],["body/overview.html",[2,1.503,24,0.068,63,0.058,64,0.068,65,0.058,68,2.23,347,3.201,432,2.771]],["title/additional-documentation/is-badge.html",[1,0.458,433,1.581,434,1.581]],["body/additional-documentation/is-badge.html",[1,1.031,3,0.828,12,1.225,14,1.111,16,3.3,17,3.009,18,2.174,24,0.059,25,0.673,26,0.904,30,1.225,31,1.859,32,1.859,33,1.859,34,1.859,35,1.859,36,1.859,37,1.859,38,1.859,39,1.859,40,1.225,41,1.225,43,1.225,45,1.496,47,1.225,58,0.673,60,0.722,63,0.039,64,0.053,65,0.039,221,1.496,294,1.496,320,2.494,321,1.496,435,1.859,436,2.494,437,2.494,438,2.41,439,2.41,440,3.234,441,3.234,442,3.234,443,4.189,444,3.234,445,3.234,446,3.234,447,3.234,448,4.349,449,3.234,450,3.234,451,3.234,452,1.859,453,2.41,454,2.494,455,1.859,456,1.859,457,1.859,458,1.859]],["title/additional-documentation/is-multiselect.html",[60,0.458,433,1.581,434,1.581]],["body/additional-documentation/is-multiselect.html",[1,0.783,12,1.558,14,0.765,18,1.132,19,1.383,21,1.383,23,1.132,24,0.073,25,0.98,26,0.98,30,1.558,40,1.558,41,1.132,43,1.558,47,1.558,60,0.783,63,0.036,64,0.05,65,0.036,67,0.765,70,1.781,71,1.58,72,1.053,74,1.781,79,2.365,81,3.294,83,1.719,84,1.719,85,2.913,86,2.365,87,2.365,88,1.719,89,2.365,90,3.469,91,1.719,95,1.719,103,2.365,111,1.383,122,1.719,123,1.719,127,1.719,129,1.719,131,2.704,132,1.719,133,2.365,135,1.383,137,1.719,138,1.719,139,1.719,140,1.903,142,1.719,143,1.719,144,1.719,145,1.719,146,1.719,148,1.719,151,1.719,152,1.719,153,1.719,157,1.719,158,2.365,165,2.365,166,1.719,221,1.383,294,1.383,321,1.383,435,1.719,436,2.365,437,1.719,452,1.719,454,2.365,455,1.719,456,1.719,457,1.719,458,1.719,459,2.228,460,2.228,461,2.228]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["0",{"_index":196,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["0/1",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":187,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["12/22",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":347,"title":{},"body":{"index.html":{},"overview.html":{}}}],["200",{"_index":194,"title":{},"body":{"components/Multiselect.html":{}}}],["2018",{"_index":367,"title":{},"body":{"license.html":{}}}],["3",{"_index":135,"title":{},"body":{"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["3/5",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":398,"title":{},"body":{"license.html":{}}}],["accidentally",{"_index":274,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":423,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":62,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["add",{"_index":265,"title":{},"body":{"contributing.html":{}}}],["additional",{"_index":433,"title":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["again",{"_index":278,"title":{},"body":{"contributing.html":{}}}],["alert",{"_index":359,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":389,"title":{},"body":{"license.html":{}}}],["another",{"_index":355,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":340,"title":{},"body":{"index.html":{}}}],["applications",{"_index":319,"title":{},"body":{"index.html":{}}}],["arising",{"_index":427,"title":{},"body":{"license.html":{}}}],["associated",{"_index":377,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":294,"title":{},"body":{"contributing.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["authors",{"_index":416,"title":{},"body":{"license.html":{}}}],["awesome",{"_index":255,"title":{},"body":{"contributing.html":{}}}],["b",{"_index":252,"title":{},"body":{"contributing.html":{}}}],["background",{"_index":440,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["badge",{"_index":1,"title":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["badge.scss",{"_index":10,"title":{},"body":{"components/Badge.html":{}}}],["badges",{"_index":157,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["before",{"_index":276,"title":{},"body":{"contributing.html":{}}}],["beside",{"_index":260,"title":{},"body":{"contributing.html":{}}}],["black",{"_index":38,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["border",{"_index":441,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["bottom",{"_index":449,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["branch",{"_index":249,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":279,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":256,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building",{"_index":291,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["building_construction",{"_index":290,"title":{},"body":{"contributing.html":{}}}],["built",{"_index":458,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["c",{"_index":366,"title":{},"body":{"license.html":{}}}],["cdn",{"_index":331,"title":{},"body":{"index.html":{}}}],["changed",{"_index":152,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["changes",{"_index":264,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":372,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":251,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":419,"title":{},"body":{"license.html":{}}}],["class",{"_index":53,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["click",{"_index":133,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["clone",{"_index":243,"title":{},"body":{"contributing.html":{}}}],["code",{"_index":350,"title":{},"body":{"index.html":{}}}],["color",{"_index":16,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["commit",{"_index":266,"title":{},"body":{"contributing.html":{}}}],["committing",{"_index":277,"title":{},"body":{"contributing.html":{}}}],["component",{"_index":0,"title":{"components/Badge.html":{},"components/Multiselect.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{}}}],["component.isnur.com",{"_index":324,"title":{},"body":{"index.html":{}}}],["component.isnur.com/docs",{"_index":325,"title":{},"body":{"index.html":{}}}],["component/issues",{"_index":283,"title":{},"body":{"contributing.html":{}}}],["component_template",{"_index":57,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["componentinterface",{"_index":77,"title":{},"body":{"components/Multiselect.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"contributing.html":{},"index.html":{},"overview.html":{}}}],["componentusage",{"_index":333,"title":{},"body":{"index.html":{}}}],["componentwillload",{"_index":94,"title":{},"body":{"components/Multiselect.html":{}}}],["conditions",{"_index":397,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":351,"title":{},"body":{"index.html":{}}}],["connection",{"_index":429,"title":{},"body":{"license.html":{}}}],["const",{"_index":173,"title":{},"body":{"components/Multiselect.html":{}}}],["contract",{"_index":424,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":358,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":239,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contributing.md",{"_index":357,"title":{},"body":{"index.html":{}}}],["copies",{"_index":391,"title":{},"body":{"license.html":{}}}],["copy",{"_index":375,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":365,"title":{},"body":{"license.html":{}}}],["count",{"_index":165,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["coverage",{"_index":297,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":247,"title":{},"body":{"contributing.html":{}}}],["css",{"_index":438,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["custom",{"_index":439,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["customevent",{"_index":460,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["damages",{"_index":420,"title":{},"body":{"license.html":{}}}],["dark",{"_index":39,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["data",{"_index":346,"title":{},"body":{"index.html":{}}}],["deal",{"_index":378,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":430,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["defined",{"_index":21,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["demo",{"_index":322,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":452,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["depends",{"_index":461,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["description",{"_index":436,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["develop",{"_index":254,"title":{},"body":{"contributing.html":{}}}],["directives",{"_index":61,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["disabled",{"_index":79,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["display",{"_index":47,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["dist",{"_index":287,"title":{},"body":{"contributing.html":{}}}],["distribute",{"_index":387,"title":{},"body":{"license.html":{}}}],["document",{"_index":108,"title":{},"body":{"components/Multiselect.html":{}}}],["document.getelementbyid(\"select",{"_index":345,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":298,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["don't",{"_index":285,"title":{},"body":{"contributing.html":{}}}],["each",{"_index":295,"title":{},"body":{"contributing.html":{}}}],["edit",{"_index":286,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":219,"title":{},"body":{"components/Multiselect.html":{}}}],["element",{"_index":211,"title":{},"body":{"components/Multiselect.html":{},"index.html":{}}}],["element.value",{"_index":214,"title":{},"body":{"components/Multiselect.html":{}}}],["elements",{"_index":145,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["emitted",{"_index":151,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["error",{"_index":35,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["etc",{"_index":344,"title":{},"body":{"index.html":{}}}],["event",{"_index":111,"title":{},"body":{"components/Multiselect.html":{},"license.html":{},"additional-documentation/is-multiselect.html":{}}}],["eventemitter",{"_index":149,"title":{},"body":{"components/Multiselect.html":{}}}],["events",{"_index":459,"title":{},"body":{"additional-documentation/is-multiselect.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["express",{"_index":407,"title":{},"body":{"license.html":{}}}],["false",{"_index":43,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["family",{"_index":444,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["feature",{"_index":248,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{}}}],["files",{"_index":259,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill:#f9f,stroke:#333,stroke",{"_index":456,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["filtereditems",{"_index":180,"title":{},"body":{"components/Multiselect.html":{}}}],["first",{"_index":317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fitness",{"_index":412,"title":{},"body":{"license.html":{}}}],["following",{"_index":396,"title":{},"body":{"license.html":{}}}],["font",{"_index":443,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["fork",{"_index":242,"title":{},"body":{"contributing.html":{}}}],["forked",{"_index":244,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["format(first",{"_index":314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":236,"title":{},"body":{"components/Multiselect.html":{}}}],["free",{"_index":371,"title":{},"body":{"license.html":{}}}],["function",{"_index":140,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["functions",{"_index":312,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":394,"title":{},"body":{"license.html":{}}}],["generated",{"_index":289,"title":{},"body":{"contributing.html":{}}}],["getselected",{"_index":95,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["getting",{"_index":237,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":250,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":370,"title":{},"body":{"license.html":{}}}],["graph",{"_index":454,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["h",{"_index":50,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["handleclick",{"_index":96,"title":{},"body":{"components/Multiselect.html":{}}}],["handleclick(event",{"_index":104,"title":{},"body":{"components/Multiselect.html":{}}}],["head",{"_index":337,"title":{},"body":{"index.html":{}}}],["height",{"_index":447,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["help",{"_index":241,"title":{},"body":{"contributing.html":{}}}],["hereby",{"_index":369,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":138,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["holders",{"_index":417,"title":{},"body":{"license.html":{}}}],["host",{"_index":49,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["html",{"_index":343,"title":{},"body":{"index.html":{}}}],["htmlinputelement",{"_index":179,"title":{},"body":{"components/Multiselect.html":{}}}],["https://github.com/isnur/is",{"_index":281,"title":{},"body":{"contributing.html":{}}}],["https://is",{"_index":323,"title":{},"body":{"index.html":{}}}],["https://unpkg.com/is",{"_index":332,"title":{},"body":{"index.html":{}}}],["id",{"_index":73,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"index.html":{}}}],["identifier",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["ilabelto",{"_index":67,"title":{"interfaces/ILabelTo.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["implements",{"_index":76,"title":{},"body":{"components/Multiselect.html":{}}}],["implied",{"_index":408,"title":{},"body":{"license.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["included",{"_index":401,"title":{},"body":{"license.html":{}}}],["including",{"_index":381,"title":{},"body":{"license.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["index.html",{"_index":338,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-badge.html":{}}}],["install",{"_index":327,"title":{},"body":{"index.html":{}}}],["installation",{"_index":326,"title":{},"body":{"index.html":{}}}],["interact",{"_index":123,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["interface",{"_index":66,"title":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":68,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"overview.html":{}}}],["isclickinside",{"_index":174,"title":{},"body":{"components/Multiselect.html":{}}}],["iselectitem",{"_index":72,"title":{"interfaces/ISelectItem.html":{}},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-multiselect.html":{}}}],["isexpanded",{"_index":80,"title":{},"body":{"components/Multiselect.html":{}}}],["isselected",{"_index":200,"title":{},"body":{"components/Multiselect.html":{}}}],["issue",{"_index":280,"title":{},"body":{"contributing.html":{}}}],["item",{"_index":201,"title":{},"body":{"components/Multiselect.html":{}}}],["item.id",{"_index":204,"title":{},"body":{"components/Multiselect.html":{}}}],["item.name",{"_index":235,"title":{},"body":{"components/Multiselect.html":{}}}],["items",{"_index":81,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["jsx",{"_index":342,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":82,"title":{},"body":{"components/Multiselect.html":{}}}],["kind",{"_index":406,"title":{},"body":{"license.html":{}}}],["label",{"_index":131,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelselected",{"_index":83,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["labelto",{"_index":84,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["last",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["left",{"_index":450,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["liability",{"_index":421,"title":{},"body":{"license.html":{}}}],["liable",{"_index":418,"title":{},"body":{"license.html":{}}}],["license",{"_index":363,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":36,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["limit",{"_index":85,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["limitation",{"_index":382,"title":{},"body":{"license.html":{}}}],["limited",{"_index":409,"title":{},"body":{"license.html":{}}}],["limittext",{"_index":86,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["list",{"_index":127,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["listen",{"_index":164,"title":{},"body":{"components/Multiselect.html":{}}}],["listen('click",{"_index":106,"title":{},"body":{"components/Multiselect.html":{}}}],["local",{"_index":246,"title":{},"body":{"contributing.html":{}}}],["m",{"_index":267,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":45,"title":{},"body":{"components/Badge.html":{},"contributing.html":{},"additional-documentation/is-badge.html":{}}}],["matching",{"_index":64,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["max",{"_index":87,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["maximum",{"_index":148,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["merchantability",{"_index":411,"title":{},"body":{"license.html":{}}}],["merge",{"_index":385,"title":{},"body":{"license.html":{}}}],["message",{"_index":143,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["metadata",{"_index":7,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["method",{"_index":101,"title":{},"body":{"components/Multiselect.html":{}}}],["methods",{"_index":19,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["middle",{"_index":315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":311,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":364,"title":{},"body":{"license.html":{}}}],["modal",{"_index":360,"title":{},"body":{"index.html":{}}}],["modify",{"_index":384,"title":{},"body":{"license.html":{}}}],["modules",{"_index":431,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":166,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["mouseevent",{"_index":105,"title":{},"body":{"components/Multiselect.html":{}}}],["multiselect",{"_index":60,"title":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"coverage.html":{},"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["multiselect.scss",{"_index":78,"title":{},"body":{"components/Multiselect.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/is-badge.html":{}}}],["new",{"_index":253,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["newvalue",{"_index":117,"title":{},"body":{"components/Multiselect.html":{}}}],["nice",{"_index":353,"title":{},"body":{"index.html":{}}}],["no_entry_sign",{"_index":284,"title":{},"body":{"contributing.html":{}}}],["noninfringement",{"_index":415,"title":{},"body":{"license.html":{}}}],["notice",{"_index":399,"title":{},"body":{"license.html":{}}}],["npm",{"_index":257,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":159,"title":{},"body":{"components/Multiselect.html":{}}}],["number",{"_index":74,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["obj.id",{"_index":203,"title":{},"body":{"components/Multiselect.html":{}}}],["obj['name'].tolowercase().includes(this.keyword.tolowercase",{"_index":217,"title":{},"body":{"components/Multiselect.html":{}}}],["obtaining",{"_index":374,"title":{},"body":{"license.html":{}}}],["ok",{"_index":262,"title":{},"body":{"contributing.html":{}}}],["oldvalue",{"_index":114,"title":{},"body":{"components/Multiselect.html":{}}}],["one",{"_index":354,"title":{},"body":{"index.html":{}}}],["onfiltereditems",{"_index":210,"title":{},"body":{"components/Multiselect.html":{}}}],["onselected",{"_index":88,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["open",{"_index":318,"title":{},"body":{"index.html":{}}}],["option",{"_index":132,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["optional",{"_index":15,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":30,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["origin",{"_index":269,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":426,"title":{},"body":{"license.html":{}}}],["out",{"_index":428,"title":{},"body":{"license.html":{}}}],["outside",{"_index":190,"title":{},"body":{"components/Multiselect.html":{}}}],["overview",{"_index":432,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":448,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["page",{"_index":434,"title":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}},"body":{}}],["pagination",{"_index":361,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"components/Multiselect.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":413,"title":{},"body":{"license.html":{}}}],["pass",{"_index":146,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["permission",{"_index":368,"title":{},"body":{"license.html":{}}}],["permit",{"_index":392,"title":{},"body":{"license.html":{}}}],["person",{"_index":373,"title":{},"body":{"license.html":{}}}],["persons",{"_index":393,"title":{},"body":{"license.html":{}}}],["pick",{"_index":153,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder",{"_index":89,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["placeholder={this.placeholder",{"_index":224,"title":{},"body":{"components/Multiselect.html":{}}}],["portions",{"_index":403,"title":{},"body":{"license.html":{}}}],["primary",{"_index":31,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["private",{"_index":177,"title":{},"body":{"components/Multiselect.html":{}}}],["process",{"_index":142,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["project",{"_index":292,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":103,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["promise.resolve(this.selected",{"_index":167,"title":{},"body":{"components/Multiselect.html":{}}}],["prop",{"_index":28,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["properties",{"_index":14,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["property",{"_index":435,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["props,function",{"_index":293,"title":{},"body":{"contributing.html":{}}}],["provided",{"_index":404,"title":{},"body":{"license.html":{}}}],["publish",{"_index":386,"title":{},"body":{"license.html":{}}}],["pull",{"_index":271,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":414,"title":{},"body":{"license.html":{}}}],["push",{"_index":268,"title":{},"body":{"contributing.html":{}}}],["put",{"_index":335,"title":{},"body":{"index.html":{}}}],["radius",{"_index":442,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["raising_hand",{"_index":240,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":349,"title":{},"body":{"index.html":{}}}],["ref={el",{"_index":223,"title":{},"body":{"components/Multiselect.html":{}}}],["remember",{"_index":352,"title":{},"body":{"index.html":{}}}],["remove",{"_index":70,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["remove={this.isselected(item",{"_index":231,"title":{},"body":{"components/Multiselect.html":{}}}],["render",{"_index":20,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["renderselecteditems",{"_index":181,"title":{},"body":{"components/Multiselect.html":{}}}],["repo",{"_index":245,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":272,"title":{},"body":{"contributing.html":{}}}],["rest",{"_index":137,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["restriction",{"_index":380,"title":{},"body":{"license.html":{}}}],["result",{"_index":63,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["return",{"_index":54,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["returns",{"_index":23,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-multiselect.html":{}}}],["right",{"_index":451,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["rights",{"_index":383,"title":{},"body":{"license.html":{}}}],["rounded",{"_index":17,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["run",{"_index":258,"title":{},"body":{"contributing.html":{}}}],["saveyou",{"_index":329,"title":{},"body":{"index.html":{}}}],["scoped",{"_index":11,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["script",{"_index":334,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":32,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["see",{"_index":356,"title":{},"body":{"index.html":{}}}],["select",{"_index":71,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{},"additional-documentation/is-multiselect.html":{}}}],["select.items",{"_index":348,"title":{},"body":{"index.html":{}}}],["select={!this.isselected(item",{"_index":233,"title":{},"body":{"components/Multiselect.html":{}}}],["selected",{"_index":90,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["selected={this.isselected(item",{"_index":229,"title":{},"body":{"components/Multiselect.html":{}}}],["selected[this.limit",{"_index":186,"title":{},"body":{"components/Multiselect.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["sell",{"_index":390,"title":{},"body":{"license.html":{}}}],["setitems",{"_index":97,"title":{},"body":{"components/Multiselect.html":{}}}],["setitems(newvalue",{"_index":113,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected",{"_index":98,"title":{},"body":{"components/Multiselect.html":{}}}],["setselected(newvalue",{"_index":118,"title":{},"body":{"components/Multiselect.html":{}}}],["settimeout",{"_index":192,"title":{},"body":{"components/Multiselect.html":{}}}],["shall",{"_index":400,"title":{},"body":{"license.html":{}}}],["show",{"_index":158,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["shown",{"_index":144,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["showselectedbadge",{"_index":91,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["similar",{"_index":336,"title":{},"body":{"index.html":{}}}],["size",{"_index":445,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["software",{"_index":376,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"index.html":{}}}],["src/.../utils.ts",{"_index":313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/components",{"_index":296,"title":{},"body":{"contributing.html":{}}}],["src/components/badge/badge.tsx",{"_index":6,"title":{},"body":{"components/Badge.html":{},"coverage.html":{}}}],["src/components/badge/badge.tsx:12",{"_index":29,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:17",{"_index":46,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:22",{"_index":44,"title":{},"body":{"components/Badge.html":{}}}],["src/components/badge/badge.tsx:24",{"_index":22,"title":{},"body":{"components/Badge.html":{}}}],["src/components/multiselect/multiselect.interface.tsx",{"_index":69,"title":{},"body":{"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx",{"_index":75,"title":{},"body":{"components/Multiselect.html":{},"coverage.html":{}}}],["src/components/multiselect/multiselect.tsx:104",{"_index":120,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:111",{"_index":109,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:204",{"_index":99,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:214",{"_index":112,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:25",{"_index":121,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:30",{"_index":154,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:35",{"_index":126,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:40",{"_index":155,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:45",{"_index":134,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:53",{"_index":136,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:58",{"_index":141,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:63",{"_index":130,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:68",{"_index":156,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:73",{"_index":147,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:75",{"_index":125,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:76",{"_index":128,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:77",{"_index":162,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:78",{"_index":160,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:84",{"_index":102,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:91",{"_index":150,"title":{},"body":{"components/Multiselect.html":{}}}],["src/components/multiselect/multiselect.tsx:94",{"_index":116,"title":{},"body":{"components/Multiselect.html":{}}}],["src/utils/utils.ts",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stage",{"_index":263,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":275,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":238,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":124,"title":{},"body":{"components/Multiselect.html":{}}}],["statements",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["stencil/core",{"_index":51,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["stenciljs",{"_index":321,"title":{},"body":{"index.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["string",{"_index":26,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"miscellaneous/functions.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["style",{"_index":221,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["styleurl",{"_index":9,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["subject",{"_index":395,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":388,"title":{},"body":{"license.html":{}}}],["submit",{"_index":270,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":402,"title":{},"body":{"license.html":{}}}],["success",{"_index":33,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["table",{"_index":310,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":362,"title":{},"body":{"index.html":{}}}],["tag",{"_index":8,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["tags",{"_index":92,"title":{},"body":{"components/Multiselect.html":{}}}],["target",{"_index":107,"title":{},"body":{"components/Multiselect.html":{}}}],["td",{"_index":455,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["template",{"_index":341,"title":{},"body":{"index.html":{}}}],["text",{"_index":18,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["textinput",{"_index":178,"title":{},"body":{"components/Multiselect.html":{}}}],["textselected",{"_index":93,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems",{"_index":215,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.length",{"_index":226,"title":{},"body":{"components/Multiselect.html":{}}}],["this.filtereditems.map((item",{"_index":227,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isexpanded",{"_index":191,"title":{},"body":{"components/Multiselect.html":{}}}],["this.isselected(item",{"_index":206,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items",{"_index":168,"title":{},"body":{"components/Multiselect.html":{}}}],["this.items.filter(obj",{"_index":216,"title":{},"body":{"components/Multiselect.html":{}}}],["this.keyword",{"_index":213,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelselected",{"_index":230,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.remove",{"_index":232,"title":{},"body":{"components/Multiselect.html":{}}}],["this.labelto.select",{"_index":234,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limit",{"_index":185,"title":{},"body":{"components/Multiselect.html":{}}}],["this.limittext(count",{"_index":188,"title":{},"body":{"components/Multiselect.html":{}}}],["this.max",{"_index":208,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect",{"_index":218,"title":{},"body":{"components/Multiselect.html":{}}}],["this.multiselect.contains(event.target",{"_index":175,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onfiltereditems",{"_index":171,"title":{},"body":{"components/Multiselect.html":{}}}],["this.onselected.emit(this.selected",{"_index":209,"title":{},"body":{"components/Multiselect.html":{}}}],["this.placeholder",{"_index":161,"title":{},"body":{"components/Multiselect.html":{}}}],["this.renderselecteditems",{"_index":199,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected",{"_index":170,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.filter(obj",{"_index":207,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.length",{"_index":184,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.map((item",{"_index":182,"title":{},"body":{"components/Multiselect.html":{}}}],["this.selected.some(obj",{"_index":202,"title":{},"body":{"components/Multiselect.html":{}}}],["this.showselectedbadge",{"_index":197,"title":{},"body":{"components/Multiselect.html":{}}}],["this.tags",{"_index":198,"title":{},"body":{"components/Multiselect.html":{}}}],["this.text",{"_index":55,"title":{},"body":{"components/Badge.html":{}}}],["this.textinput",{"_index":212,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textinput.focus",{"_index":193,"title":{},"body":{"components/Multiselect.html":{}}}],["this.textselected",{"_index":169,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(!this.isexpanded)}>&nbsp",{"_index":225,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(false",{"_index":176,"title":{},"body":{"components/Multiselect.html":{}}}],["this.toggle(true",{"_index":220,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item",{"_index":228,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateitems(item)}>x",{"_index":183,"title":{},"body":{"components/Multiselect.html":{}}}],["this.updateplaceholder",{"_index":172,"title":{},"body":{"components/Multiselect.html":{}}}],["tip",{"_index":273,"title":{},"body":{"contributing.html":{}}}],["toggle",{"_index":189,"title":{},"body":{"components/Multiselect.html":{}}}],["top",{"_index":320,"title":{},"body":{"index.html":{},"additional-documentation/is-badge.html":{}}}],["tort",{"_index":425,"title":{},"body":{"license.html":{}}}],["true",{"_index":12,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/Badge.html":{},"interfaces/ILabelTo.html":{},"interfaces/ISelectItem.html":{},"components/Multiselect.html":{},"coverage.html":{},"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["u2713",{"_index":129,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["undefined",{"_index":437,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["unpkg",{"_index":330,"title":{},"body":{"index.html":{}}}],["updateitems",{"_index":205,"title":{},"body":{"components/Multiselect.html":{}}}],["updateplaceholder",{"_index":195,"title":{},"body":{"components/Multiselect.html":{}}}],["use",{"_index":339,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":453,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["user",{"_index":122,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["using",{"_index":328,"title":{},"body":{"index.html":{}}}],["value",{"_index":42,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{}}}],["var",{"_index":56,"title":{},"body":{"components/Badge.html":{},"components/Multiselect.html":{},"index.html":{}}}],["void",{"_index":100,"title":{},"body":{"components/Multiselect.html":{}}}],["warning",{"_index":34,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["warranties",{"_index":410,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":405,"title":{},"body":{"license.html":{}}}],["watch",{"_index":163,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('items",{"_index":115,"title":{},"body":{"components/Multiselect.html":{}}}],["watch('selected",{"_index":119,"title":{},"body":{"components/Multiselect.html":{}}}],["web",{"_index":282,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["weight",{"_index":446,"title":{},"body":{"additional-documentation/is-badge.html":{}}}],["whether",{"_index":422,"title":{},"body":{"license.html":{}}}],["white",{"_index":37,"title":{},"body":{"components/Badge.html":{},"additional-documentation/is-badge.html":{}}}],["width:4px",{"_index":457,"title":{},"body":{"additional-documentation/is-badge.html":{},"additional-documentation/is-multiselect.html":{}}}],["within",{"_index":139,"title":{},"body":{"components/Multiselect.html":{},"additional-documentation/is-multiselect.html":{}}}],["without",{"_index":379,"title":{},"body":{"license.html":{}}}],["www",{"_index":288,"title":{},"body":{"contributing.html":{}}}],["yours",{"_index":261,"title":{},"body":{"contributing.html":{}}}],["zindex",{"_index":222,"title":{},"body":{"components/Multiselect.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/Badge.html":{"url":"components/Badge.html","title":"component - Badge","body":"\n                   \n\n\n\n\n\n  Components\n  Badge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/badge/badge.tsx\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-badge\n            \n\n            \n                styleUrl\n                badge.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                color\n                            \n                            \n                                    Optional\n                                rounded\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/badge/badge.tsx:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:12\n                            \n                        \n\n                \n                    \n                        The color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rounded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:22\n                            \n                        \n\n                \n                    \n                        If true, make the badge rounded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/badge/badge.tsx:17\n                            \n                        \n\n                \n                    \n                        The text to display in the badge.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'is-badge',\n  styleUrl: 'badge.scss',\n  scoped: true\n})\nexport class Badge {\n  /**\n     * The color options are: `\"primary\"`, `\"secondary\"`, `\"success\"`, `\"warning\"`, `\"error\"`, `\"light\"`, `\"info\"`, `\"white\"`, `\"black\"`, and `\"dark\"`.\n     */\n  @Prop() color?: string;\n\n  /**\n   * The text to display in the badge.\n   */\n  @Prop() text: string;\n\n  /**\n   * If `true`, make the badge rounded.\n   */\n  @Prop() rounded?: boolean = false;\n\n  render() {\n    return (\n      \n        {this.text}\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Badge'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILabelTo.html":{"url":"interfaces/ILabelTo.html","title":"interface - ILabelTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILabelTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        remove\n                                \n                                \n                                        select\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        remove:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISelectItem.html":{"url":"interfaces/ISelectItem.html","title":"interface - ISelectItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISelectItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/multiselect/multiselect.interface.tsx\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ISelectItem {\n  id: number;\n  name: string;\n}\n\ninterface ILabelTo {\n  remove: string;\n  select: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Multiselect.html":{"url":"components/Multiselect.html","title":"component - Multiselect","body":"\n                   \n\n\n\n\n\n  Components\n  Multiselect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    src/components/multiselect/multiselect.tsx\n\n\n\n\n    \n        Implements\n    \n    \n                ComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                tag\n                is-multiselect\n            \n\n            \n                styleUrl\n                multiselect.scss\n            \n\n\n            \n                scoped\n                true\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                isExpanded\n                            \n                            \n                                items\n                            \n                            \n                                keyword\n                            \n                            \n                                labelSelected\n                            \n                            \n                                labelTo\n                            \n                            \n                                limit\n                            \n                            \n                                limitText\n                            \n                            \n                                max\n                            \n                            \n                                onSelected\n                            \n                            \n                                placeholder\n                            \n                            \n                                selected\n                            \n                            \n                                showSelectedBadge\n                            \n                            \n                                tags\n                            \n                            \n                                textSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentWillLoad\n                            \n                            \n                                getSelected\n                            \n                            \n                                handleClick\n                            \n                            \n                                render\n                            \n                            \n                                setItems\n                            \n                            \n                                setSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            componentWillLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncomponentWillLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelected\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelected()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Method()\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:84\n                \n            \n\n\n            \n                \n                    Get the selected items.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Listen('click', {target: 'document'})\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \nsetItems(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('items')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelected\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelected(newValue: ISelectItem[], oldValue: ISelectItem[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Watch('selected')\n                \n            \n\n            \n                \n                    Defined in src/components/multiselect/multiselect.tsx:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldValue\n                                    \n                                                ISelectItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:25\n                            \n                        \n\n                \n                    \n                        If true, the user cannot interact with the select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isExpanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:35\n                            \n                        \n\n                \n                    \n                        The options list items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\u2713'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:63\n                            \n                        \n\n                \n                    \n                        The label when option is selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            labelTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILabelTo\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  }\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:45\n                            \n                        \n\n                \n                    \n                        The label to remove or select.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:53\n                            \n                        \n\n                \n                    \n                        Limit the display of selected options. The rest will be hidden within the limitText string.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:58\n                            \n                        \n\n                \n                    \n                        Function that process the message shown when selected elements pass the defined limit.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:73\n                            \n                        \n\n                \n                    \n                        Maximum selected items can be selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EventEmitter\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Event()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:91\n                            \n                        \n\n                \n                    \n                        Emitted when the selected items has changed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Pick some\"\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:30\n                            \n                        \n\n                \n                    \n                        The text to display when not selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISelectItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:40\n                            \n                        \n\n                \n                    \n                        The selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSelectedBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:68\n                            \n                        \n\n                \n                    \n                        If true, The badges will show selected items.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : this.placeholder\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @State()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/components/multiselect/multiselect.tsx:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentInterface,\n  Host,\n  Prop,\n  State,\n  Method,\n  Watch,\n  Listen,\n  Event,\n  EventEmitter,\n  h\n} from '@stencil/core';\n\n@Component({\n  tag: 'is-multiselect',\n  styleUrl: 'multiselect.scss',\n  scoped: true\n})\nexport class Multiselect implements ComponentInterface {\n\n  /**\n   * If `true`, the user cannot interact with the select.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * The text to display when not selected items.\n   */\n  @Prop() placeholder: string = \"Pick some\";\n\n  /**\n   * The options list items.\n   */\n  @Prop() items: ISelectItem[] = [];\n\n  /**\n   * The selected items.\n   */\n  @Prop() selected: ISelectItem[] = [];\n\n  /**\n   * The label to remove or select.\n   */\n  @Prop() labelTo: ILabelTo = {\n    remove: 'Click to Remove',\n    select: 'Click to Select'\n  };\n\n  /**\n   * Limit the display of selected options. The rest will be hidden within the limitText string.\n   */\n  @Prop() limit: number = 3;\n\n  /**\n   * Function that process the message shown when selected elements pass the defined limit.\n   */\n  @Prop() limitText: Function = (count: number) => 'and ' + count + ' more';\n\n  /**\n   * The label when option is selected.\n   */\n  @Prop() labelSelected: string = '\\u2713';\n\n  /**\n   * If `true`, The badges will show selected items.\n   */\n  @Prop() showSelectedBadge: boolean = false;\n\n  /**\n   * Maximum selected items can be selected.\n   */\n  @Prop() max: number;\n\n  @State() isExpanded: boolean = false;\n  @State() keyword: string = '';\n  @State() textSelected: string = this.placeholder;\n  @State() tags = null;\n\n  /**\n   * Get the selected items.\n   */\n  @Method()\n  getSelected(): Promise {\n    return Promise.resolve(this.selected);\n  }\n\n  /**\n   * Emitted when the selected items has changed.\n   */\n  @Event() onSelected: EventEmitter;\n\n  @Watch('items')\n  setItems(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.items = newValue;\n      this.textSelected = this.placeholder;\n      this.selected = [];\n      this.onFilteredItems();\n    }\n  }\n\n  @Watch('selected')\n  setSelected(newValue: ISelectItem[], oldValue: ISelectItem[]) {\n    if (newValue !== oldValue) {\n      this.updatePlaceholder();\n    }\n  }\n\n  @Listen('click', {target: 'document'})\n  handleClick(event: MouseEvent) {\n    const isClickInside = this.multiselect.contains(event.target);\n\n    if (!isClickInside) {\n      this.toggle(false, true);\n    }\n  }\n\n  private textInput?: HTMLInputElement;\n  private multiselect?: any;\n  private filteredItems: ISelectItem[] = this.items;\n\n  private renderSelectedItems = () => {\n    let selected = [];\n    if (this.selected) {\n      this.selected.map((item, i) => {\n        if (i \n              \n               this.updateItems(item)}>x\n            \n          );\n        } else {\n          const count = this.selected.length - this.limit;\n          selected[this.limit + 1] = {this.limitText(count)}\n        }\n      });\n    }\n    return selected;\n  };\n\n  private toggle = (state: boolean, outside?: boolean) => {\n    this.isExpanded = state;\n    this.updatePlaceholder();\n    if (!outside) {\n      if (this.isExpanded) {\n        setTimeout(() => {\n          this.textInput.focus();\n        }, 200);\n      }\n    }\n  };\n\n  private updatePlaceholder() {\n    this.textSelected = this.placeholder;\n    if (this.selected && this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n    if (this.isExpanded) {\n      this.textSelected = '';\n    }\n  }\n\n  private isSelected = (item: ISelectItem) => {\n    if (this.selected) {\n      return this.selected.some(obj => obj.id === item.id)\n    }\n    return false;\n  };\n\n  private updateItems = (item: ISelectItem) => {\n    if (this.isSelected(item)) {\n      this.selected = this.selected.filter(obj => {\n        return obj.id !== item.id;\n      });\n    } else {\n      if (this.selected.length !== this.max) {\n        if (this.selected && this.selected.length > 0) {\n          this.selected = [...this.selected, item];\n        } else {\n          this.selected = [item];\n        }\n      }\n    }\n    this.onSelected.emit(this.selected);\n  };\n\n  private onFilteredItems = () => {\n    const element = this.textInput;\n    if (element) {\n      this.keyword = element.value;\n      this.filteredItems = this.items.filter(obj => {\n        return obj['name'].toLowerCase().includes(this.keyword.toLowerCase());\n      });\n    } else {\n      this.filteredItems = this.items;\n    }\n  };\n\n  componentWillLoad() {\n    this.textSelected = this.placeholder;\n    if (this.selected.length > 0 && !this.isExpanded) {\n      this.textSelected = this.selected.length + ' options selected';\n    }\n    if (this.showSelectedBadge) {\n      this.tags = this.renderSelectedItems();\n    }\n  }\n\n  render() {\n    return (\n       this.multiselect = el}>\n        \n\n           this.toggle(true)} style={{\n            zIndex: this.isExpanded ? '-1' : '0'\n          }}>\n          \n\n          \n            {this.showSelectedBadge && this.selected && this.selected.length > 0 ? this.tags : this.textSelected}\n          \n\n          {this.isExpanded &&\n          \n               this.onFilteredItems()}\n                  ref={el => this.textInput = el}\n                  placeholder={this.placeholder}\n              />\n          \n          }\n           this.toggle(!this.isExpanded)}>&nbsp;\n        \n        {\n          this.isExpanded &&\n          \n              \n                {\n                  this.filteredItems.length > 0 ? this.filteredItems.map((item: ISelectItem, i) => {\n                    return (\n                       this.updateItems(item)}\n                          label-selected={this.isSelected(item) ? this.labelSelected : null}\n                          label-to-remove={this.isSelected(item) ? this.labelTo.remove : null}\n                          label-to-select={!this.isSelected(item) ? this.labelTo.select : null}\n                      >{item.name}\n                    )\n                  }) : Not found\n                }\n              \n          \n        }\n      \n    );\n  }\n}\n\n    \n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'Badge', 'selector': ''},{'name': 'Multiselect', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Multiselect'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\n:raising_hand:   How to help:\n\nFork it!\nClone your forked repo to your local\nCreate your feature branch: git checkout -b my-new-feature\nDevelop your new awesome feature\nBuild it npm run build (it will make a new files beside yours but its ok)\nStage your changes: git add .\nCommit your changes: git commit -m 'Add some feature'\nPush to the branch: git push origin my-new-feature\nSubmit a pull request!\n\nTip: \n\nif you accidentally run npm start before committing your changes, run npm run build again then commit.\nYou can browse any issue you can help at\nhttps://github.com/isnur/is-web-component/issues\n\n:no_entry_sign:   Don't edit the files in dist/, www/ - they are generated:\nWhat you can do\n:building_construction:   Building the project\n\nyou can add some new awesome components\nyou can edit or add some props,function and attribute for each components in src/components/\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/components/badge/badge.tsx\n            \n            component\n            Badge\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ILabelTo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.interface.tsx\n            \n            interface\n            ISelectItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/multiselect/multiselect.tsx\n            \n            component\n            Multiselect\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/utils/utils.ts\n            \n            function\n            format\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            format   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(first, middle, last)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    first\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    middle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    last\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIs-Web-Component\n  \n    \nOpen source web components for building web applications. Build on top StencilJS.\nDemo\nhttps://is-web-component.isnur.com/\nDocumentation\nhttps://is-web-component.isnur.com/docs/\nInstallation\nYou can install using NPM:\nnpm i is-web-component --saveYou can install using unpkg cdn:\nhttps://unpkg.com/is-web-componentUsage\nScript tag\n\nPut a script tag similar to this\n  in the head of your index.html\n\nThen you can use the element anywhere in your template, JSX, html etc.\n  is-badge\n  \n\n  is-multiselect\n  \n\n  \n    var select = document.getElementById(\"select\");\n    var data = [{\n      id: 1,\n      name: 'Data 1'\n    }, {\n      id: 2,\n      name: 'Data 2'\n    }, {\n      id: 3,\n      name: 'Data 3'\n    }];\n    select.items = data;\n  \n\nContributing\n\nRead the project Code of Conduct and remember to be nice to one another.\nSee CONTRIBUTING.md for info about how to contribute to this project.\n\nComponents\n\n is-alert\n is-badge\n is-modal\n is-multiselect\n is-pagination\n is-table\n is-tabs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-badge.html":{"url":"additional-documentation/is-badge.html","title":"additional-page - is-badge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-badge\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ncolor\ncolor\nThe color options are: \"primary\", \"secondary\", \"success\", \"warning\", \"error\", \"light\", \"info\", \"white\", \"black\", and \"dark\".\nstring\nundefined\n\n\nrounded\nrounded\nIf true, make the badge rounded.\nboolean\nfalse\n\n\ntext\ntext\nThe text to display in the badge.\nstring\nundefined\n\n\n\nCSS Custom Properties\n\n\n\nName\nDescription\n\n\n\n\n--background-color\nBackground color of the badge\n\n\n--border-radius\nBorder radius of the badge if is rounded\n\n\n--color\nText color of the badge\n\n\n--font-family\nFont family of the badge text\n\n\n--font-size\nFont size of the badge text\n\n\n--font-weight\nFont weight of the badge text\n\n\n--height\nHeight of the badge\n\n\n--padding-bottom\nPadding bottom of the badge\n\n\n--padding-left\nPadding left of the badge\n\n\n--padding-right\nPadding right of the badge\n\n\n--padding-top\nPadding top of the badge\n\n\n\nDependencies\nUsed by\n\nis-multiselect\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-badge fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/is-multiselect.html":{"url":"additional-documentation/is-multiselect.html","title":"additional-page - is-multiselect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nis-multiselect\n\n\n\nProperties\n\n\n\nProperty\nAttribute\nDescription\nType\nDefault\n\n\n\n\ndisabled\ndisabled\nIf true, the user cannot interact with the select.\nboolean\nfalse\n\n\nitems\n--\nThe options list items.\nISelectItem[]\n[]\n\n\nlabelSelected\nlabel-selected\nThe label when option is selected.\nstring\n'\\u2713'\n\n\nlabelTo\n--\nThe label to remove or select.\nILabelTo\n{     remove: 'Click to Remove',     select: 'Click to Select'   }\n\n\nlimit\nlimit\nLimit the display of selected options. The rest will be hidden within the limitText string.\nnumber\n3\n\n\nlimitText\n--\nFunction that process the message shown when selected elements pass the defined limit.\nFunction\n(count: number) => 'and ' + count + ' more'\n\n\nmax\nmax\nMaximum selected items can be selected.\nnumber\nundefined\n\n\nplaceholder\nplaceholder\nThe text to display when not selected items.\nstring\n\"Pick some\"\n\n\nselected\n--\nThe selected items.\nISelectItem[]\n[]\n\n\nshowSelectedBadge\nshow-selected-badge\nIf true, The badges will show selected items.\nboolean\nfalse\n\n\n\nEvents\n\n\n\nEvent\nDescription\nType\n\n\n\n\nonSelected\nEmitted when the selected items has changed.\nCustomEvent\n\n\n\nMethods\ngetSelected() => Promise\nGet the selected items.\nReturns\nType: Promise\nDependencies\nDepends on\n\nis-badge\n\nGraph\ngraph TD;\n  is-multiselect --> is-badge\n  style is-multiselect fill:#f9f,stroke:#333,stroke-width:4px\nBuilt with StencilJS\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
